<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">postmarketOS Blog</title>
  <id>https://postmarketos.org/blog/feed.atom</id>
  <updated>2018-08-25T00:00:00Z</updated>
  <link href="https://postmarketos.org/blog/" />
  <link href="https://postmarketos.org/blog/feed.atom" rel="self" />
  <author>
    <name>postmarketOS bloggers</name>
  </author>
  <icon>https://postmarketos.org/logo.svg</icon>
  <generator>Werkzeug</generator>
  <entry xml:base="https://postmarketos.org/blog/feed.atom">
    <title type="text">postmarketOS at Akademy 2018</title>
    <id>https://postmarketos.org/blog/2018/08/25/postmarketos-at-akademy/</id>
    <updated>2018-08-25T00:00:00Z</updated>
    <link href="https://postmarketos.org/blog/2018/08/25/postmarketos-at-akademy/" />
    <content type="html">&lt;p&gt;Two weeks ago was &lt;a href=&quot;https://akademy.kde.org/2018&quot;&gt;Akademy 2018&lt;/a&gt;, KDE's yearly gathering to talk about and develop all things KDE. Since Plasma Mobile (&lt;a href=&quot;https://postmarketos.org/blog/2017/12/31/219-days-of-postmarketOS/#plasma-mobile&quot;&gt;which we have packaged&lt;/a&gt;) was of course also represented, a few members of the postmarketOS team decided to attend and meet each other for the first time! &lt;a href=&quot;https://gitlab.com/ollieparanoid&quot;&gt;@ollieparanoid&lt;/a&gt; even took it upon himself to hold a talk about our project, telling everyone what it's about and what progress has been made since the start. You can &lt;a href=&quot;/static/slides/2018-akademy/&quot;&gt;view the slides here&lt;/a&gt; and this blog post will be updated to include a link to the video of the talk once Akademy's recordings are put online.&lt;/p&gt;
&lt;p&gt;Besides our own talk, our friend &lt;a href=&quot;https://gitlab.com/bshah&quot;&gt;@bshah&lt;/a&gt; from Plasma Mobile also had a talk about the progress on running the mainline kernel rather than libhybris or Halium to achieve fully working hardware (&lt;a href=&quot;https://blog.bshah.in/slides/akademy2018/&quot;&gt;slides are available as well&lt;/a&gt;). We used this opportunity to talk with the Plasma Mobile team directly and discuss the future and exchange ideas.&lt;/p&gt;
&lt;p&gt;Also present was TL Lim from &lt;a href=&quot;https://pine64.org&quot;&gt;PINE64&lt;/a&gt; who kindly offered several of us dev-kits for the Pine A64 including a touch screen, so we can develop postmarketOS on it. Watch out for a port coming to that device!&lt;/p&gt;
&lt;p&gt;Read the &lt;a href=&quot;https://www.plasma-mobile.org/2018/08/23/Plasma-Mobile-at-Akademy-2018.html&quot;&gt;Plasma Mobile's blog post&lt;/a&gt; for more Akademy 2018.&lt;/p&gt;
&lt;h3 id=&quot;update-the-video-recordings-of-the-talks-are-online&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#update-the-video-recordings-of-the-talks-are-online&quot;&gt;UPDATE: The &lt;a href=&quot;https://cdn.files.kde.org/akademy/2018/videos/&quot;&gt;video recordings&lt;/a&gt; of the talks are online!&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;/static/img/2018-08/pmos-plamo-akademy2018.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wfull border&quot; src=&quot;/static/img/2018-08/pmos-plamo-akademy2018.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;From left to right:
&lt;a href=&quot;https://gitlab.com/ata2001&quot;&gt;@ata2001&lt;/a&gt;,
&lt;a href=&quot;https://gitlab.com/bshah&quot;&gt;@bshah&lt;/a&gt;,
&lt;a href=&quot;https://gitlab.com/z3ntu&quot;&gt;@z3ntu&lt;/a&gt;,
&lt;a href=&quot;https://gitlab.com/ollieparanoid&quot;&gt;@ollieparanoid&lt;/a&gt;,
&lt;a href=&quot;https://gitlab.com/theblackcrow1&quot;&gt;@theblackcrow1&lt;/a&gt;,
&lt;a href=&quot;https://gitlab.com/PureTryOut&quot;&gt;@PureTryOut&lt;/a&gt;,
&lt;a href=&quot;https://gitlab.com/JBBgameich&quot;&gt;@JBBgameich&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PS: Shout out to all the Mastodon users, who keep on posting cool &lt;a href=&quot;https://mastodon.technology/tags/postmarketos&quot;&gt;pmOS related content&lt;/a&gt;. &lt;a href=&quot;https://gitlab.com/theblackcrow1&quot;&gt;@theblackcrow1&lt;/a&gt; set up &lt;a href=&quot;https://fosstodon.org/@postmarketOS&quot;&gt;@postmarketOS&lt;/a&gt;, so you can enjoy small updates from our side right in your favorite free software social network.&lt;/p&gt;
&lt;h3 id=&quot;comments&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#comments&quot;&gt;Comments&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/postmarketOS/duplicates/9a2nzf/postmarketos_at_akademy_2018/&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=17838788&quot;&gt;HN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry xml:base="https://postmarketos.org/blog/feed.atom">
    <title type="text">postmarketOS is #movingtogitlab</title>
    <id>https://postmarketos.org/blog/2018/06/27/moving-to-gitlab/</id>
    <updated>2018-06-27T00:00:00Z</updated>
    <link href="https://postmarketos.org/blog/2018/06/27/moving-to-gitlab/" />
    <content type="html">&lt;p&gt;&lt;a href=&quot;/static/img/2018-06/broken-castor.jpg&quot;&gt;&lt;img alt=&quot;Broken Sony Xperia Z2 Tablet&quot; class=&quot;wfull border&quot; src=&quot;/static/img/2018-06/broken-castor-thumb.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For a lot of people, learning that &lt;a href=&quot;https://www.bloomberg.com/news/articles/2018-06-04/microsoft-agrees-to-buy-coding-site-github-for-7-5-billion&quot;&gt;Microsoft will buy GitHub at the end of 2018&lt;/a&gt; &lt;a href=&quot;https://jacquesmattheij.com/what-is-wrong-with-microsoft-buying-github&quot;&gt;shattered trust in GitHub&lt;/a&gt; like the glass of &lt;a href=&quot;https://gitlab.com/opendata26&quot;&gt;@opendata26&lt;/a&gt;'s &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Sony_Xperia_Z2_Tablet_(sony-castor-windy)&quot;&gt;Sony Xperia Z2 Tablet&lt;/a&gt;. Beyond that, GitHub has always employed vendor lock-in: the user's issues and pull requests are hidden behind a rate limited API instead of being available through a proper export feature. And even if you managed to export it through that API, you cannot host your own GitHub instance and modify it as you like because, there is not even a partially open source version of it.&lt;/p&gt;
&lt;p&gt;We want to be in control of our own data. While we can't maintain a self-hosted solution at this point, we want to at least be able to create a public backup of all our &amp;gt; 1500 issues and pull requests once a week. After &lt;a href=&quot;https://github.com/postmarketOS/postmarketos.org/issues/37&quot;&gt;some discussion&lt;/a&gt; we ended up with gitlab.com as alternative, because its API allows us to create &lt;a href=&quot;https://docs.gitlab.com/ee/api/project_import_export.html&quot;&gt;whole backups at once&lt;/a&gt; and we can &lt;a href=&quot;https://gitlab.com/help/user/project/settings/import_export.md&quot;&gt;import&lt;/a&gt; them into our own instance if we want to do that in the future. The workflow is similar to GitHub, so we expect a rather smooth transition compared to using something entirely different.&lt;/p&gt;
&lt;p&gt;The migration is scheduled for &lt;strong&gt;Saturday (2018-06-30)&lt;/strong&gt;. If you have written anything in issues or pull requests in the postmarketOS repositories on GitHub, consider &lt;strong&gt;&lt;a href=&quot;https://gitlab.com/users/sign_in&quot;&gt;creating a gitlab account&lt;/a&gt; with the same e-mail address as your GitHub account&lt;/strong&gt; for a smooth migration (so it will show what you have written on GitHub with your gitlab user on gitlab).&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https://gitlab.com/craftyguy&quot;&gt;@craftyguy&lt;/a&gt; for migrating our CI scripts in &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1539&quot;&gt;#1539&lt;/a&gt;. Also, thanks to everyone working at GitHub for providing us with their hosting service for &lt;a href=&quot;/blog/2018/06/09/one-year/&quot;&gt;more than a year&lt;/a&gt;. A good opportunity for Microsoft to follow through with their promises of being nice to the open source community would be to open up GitHub more. In case you think that won't happen and want to move away from GitHub as well, make sure to carefully evaluate all the platforms that are out there. Just because gitlab was the best match for us doesn't mean that you can't find a better one for your project.&lt;/p&gt;
&lt;h3 id=&quot;comments&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#comments&quot;&gt;Comments&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://old.reddit.com/r/postmarketOS/duplicates/8u7b3c/postmarketos_is_movingtogitlab/&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=17406156&quot;&gt;HN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry xml:base="https://postmarketos.org/blog/feed.atom">
    <title type="text">One Year of postmarketOS: Mainline Calling!</title>
    <id>https://postmarketos.org/blog/2018/06/09/one-year/</id>
    <updated>2018-06-09T00:00:00Z</updated>
    <link href="https://postmarketos.org/blog/2018/06/09/one-year/" />
    <content type="html">&lt;h2 id=&quot;postmarketos-experimental-sustainable-operating-system&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#postmarketos-experimental-sustainable-operating-system&quot;&gt;postmarketOS: Experimental Sustainable Operating System&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;p&gt;&lt;a href=&quot;/static/img/2018-06/fbdebug-smte-bars-wrong.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;fr ml3 mb4&quot; src=&quot;/static/img/2018-06/fbdebug-smte-bars-wrong-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
&lt;p&gt;Wow, so it has been one full year since the public announcement of postmarketOS, and what a year it has been! During this time the project has grown beyond our wildest dreams; dozens of contributors making a wide variety of contributions, friendships made, bragging rights established (and lost, and re-established), Doom running on things it probably shouldn't, and we're ultimately just getting started. This post is also a celebration of all the hard work that has gone into postmarketOS in the last year, it's &lt;strong&gt;first&lt;/strong&gt; year!&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Before we begin with our list of changes since the last post in &lt;a href=&quot;/blog/2017/12/31/219-days-of-postmarketOS/&quot;&gt;December&lt;/a&gt; and other exciting news, a quick intro for folks just now learning of this project for the first time: postmarketOS aims to be a sustainable operating system that empowers users to safely use their devices for as long as possible (ideally until they physically fall apart). The system is designed to share as many packages as possible between supported devices, with the ability to make exceptions for a few device-specific packages as appropriate/needed. This is in contrast to systems like Android, where the many device-specific changes are required to support any particular device.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;At this point, postmarketOS is only meant to be used by developers.&lt;/strong&gt; In most instances, phone calls, SMS, bluetooth or the mainline kernel won't work on your device, and there's the &lt;a href=&quot;https://ollieparanoid.github.io/post/security-warning/&quot;&gt;firmware problem&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;mainline-on-the-horizon&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#mainline-on-the-horizon&quot;&gt;Mainline On the Horizon&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;https://www.youtube.com/watch?v=77tuFtM4gjA&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;border&quot; src=&quot;/static/img/2018-06/forward-porting-elec-2017-thumb.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
In February 2017 Jeremy McNicoll presented on his progress with &lt;a href=&quot;https://www.youtube.com/watch?v=77tuFtM4gjA&quot;&gt;forward porting the Google Nexus 5X/6P&lt;/a&gt;. He explains the technical difficulties of replacing the downstream Linux kernel that you find on your device after you bought it with the latest &lt;a href=&quot;https://www.kernel.org/&quot;&gt;upstream version&lt;/a&gt;. Towards the end he mentioned on his &quot;lessons learned&quot; slide: &quot;Maybe 10 years ago I would have said we can cure world hunger, we can get the whole thing working.&quot; Then he shook his head. &quot;I'm more realistic now.&quot;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2018-06/wallpaper-darkside.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;border&quot; src=&quot;/static/img/2018-06/wallpaper-darkside-thumb.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
This is how it felt one and a half years ago. It was hard to imagine that we could have phones that would run the upstream kernel. We did not have a feasible method of patching all of the critical security holes in the core of the operating system once the vendor's ridiculously short support cycle ends.
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The problem is not completely resolved today, there is still a lot more work to do. But this dream on having devices with mainline kernel support is becoming more realistic now after all the amazing work done by hackers in communities like ##linux-msm and #freedreno. PostmarketOS is not the only distro with this dream, two more distributions have also decided to pursue this with (specific) phones: &lt;a href=&quot;https://puri.sm/shop/librem-5/&quot;&gt;Pure OS&lt;/a&gt; and &lt;a href=&quot;https://maemo-leste.github.io/&quot;&gt;Maemo Leste&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;https://www.youtube.com/watch?v=lMh4ZmR59hQ&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;border&quot; src=&quot;/static/img/2018-06/keynote-linaro-connect-2018-thumb.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
Even established vendors seem be coming around to the idea. In March of this year, the &lt;a href=&quot;https://www.youtube.com/watch?v=lMh4ZmR59hQ&quot;&gt;Linaro Connect Opening Keynote&lt;/a&gt; spent 15 minutes pleading with their big list of &lt;a href=&quot;https://www.linaro.org/members/&quot;&gt;member companies&lt;/a&gt; that upstream kernel support is the way to go: &quot;Very few embedded &lt;a href=&quot;https://en.wikipedia.org/wiki/System_on_a_chip&quot;&gt;SoCs&lt;/a&gt; are supported properly upstream. That is changing, it has to change. [...] and most importantly, we have to do that upstream. Because nothing else scales. Testing just your own version doesn't actually help everyone else. And as a result you don't get the benefit of everybody else's testing.&quot;
&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;nexus-5-floss-modem-stack-with-mainline&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#nexus-5-floss-modem-stack-with-mainline&quot;&gt;Nexus 5: FLOSS Modem Stack With Mainline&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2018-06/mainline-hammerhead-plamo-firefox.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;fr ml3 cr&quot; src=&quot;/static/img/2018-06/mainline-hammerhead-plamo-firefox-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
You might remember &lt;a href=&quot;https://github.com/bhush9&quot;&gt;@bshah&lt;/a&gt;'s  photo of the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Google_Nexus_5_(lg-hammerhead)&quot;&gt;Nexus 5&lt;/a&gt; running mainline with a &lt;a href=&quot;/static/img/2017-12/mainline-hammerhead.jpg&quot;&gt;flipped and distorted screen&lt;/a&gt; from December. &lt;a href=&quot;https://github.com/flto&quot;&gt;@flto&lt;/a&gt; &lt;a href=&quot;https://github.com/flto/linux/wiki/hammerhead-upstream&quot;&gt;continued&lt;/a&gt; his work: the display works without problems now. But it gets even better: the touch screen is working, 3D acceleration is enabled with the open source &lt;a href=&quot;https://github.com/freedreno/freedreno/wiki&quot;&gt;freedreno&lt;/a&gt; userspace driver, Wi-Fi works, and the best part is that &lt;a href=&quot;https://github.com/MartijnBraam&quot;&gt;@MartijnBraam&lt;/a&gt; was able to send SMS and initialize a call via command line as well as getting the connectivity signal from the modem through &lt;a href=&quot;https://en.wikipedia.org/wiki/oFono&quot;&gt;oFono&lt;/a&gt; displayed in &lt;a href=&quot;https://plasma-mobile.org/&quot;&gt;Plasma Mobile&lt;/a&gt; (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1502&quot;&gt;#1502&lt;/a&gt;). All of that without proprietary userspace blobs!&lt;/p&gt;
&lt;p&gt;Of course it would be nice if the device could receive phone calls and facilitate conversation. We're not quite there yet but we may be soon thanks to &lt;a href=&quot;https://github.com/Srinivas-Kandagatla&quot;&gt;@Srinivas-Kandagatla&lt;/a&gt;, who is working on mainline audio support for the &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_Qualcomm_Snapdragon_devices#Snapdragon_820_and_821&quot;&gt;Snapdragon 820 SoC&lt;/a&gt;, the Linux kernel will soon be able to utilize the audio stack on Qualcomm phones like the Nexus 5. Once that is in place, we can piece the userspace functionality together.
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So as of right now we can communicate with the Qualcomm Modem Interface (QMI) without using any userspace blobs. This would not have been possible without the amazing work from &lt;a href=&quot;https://github.com/scintill&quot;&gt;@scintill&lt;/a&gt; who packaged all necessary glue libraries provided by &lt;a href=&quot;https://github.com/andersson&quot;&gt;@andersson&lt;/a&gt; (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1314&quot;&gt;#1314&lt;/a&gt;). The first pull request made it work with the downstream kernel of the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung_Galaxy_S4_Mini_LTE&quot;&gt;Galaxy S4 Mini LTE&lt;/a&gt; followed by another PR that enabled it to work with our mainline packaging (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1381&quot;&gt;#1381&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-bottom&quot;&gt;
&lt;a href=&quot;/static/img/2018-06/mainline-hammerhead-terminal-kernel.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2018-06/mainline-hammerhead-terminal-kernel-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2018-06/mainline-hammerhead-plamo-modem.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2018-06/mainline-hammerhead-plamo-modem-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2018-06/mainline-hammerhead-call-from-terminal.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2018-06/mainline-hammerhead-call-from-terminal-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/andersson&quot;&gt;@andersson&lt;/a&gt;, &lt;a href=&quot;https://github.com/bhush9&quot;&gt;@bshah&lt;/a&gt;, &lt;a href=&quot;https://github.com/flto&quot;&gt;@flto&lt;/a&gt;, &lt;a href=&quot;https://github.com/MartijnBraam&quot;&gt;@MartijnBraam&lt;/a&gt;, &lt;a href=&quot;https://github.com/opendata26&quot;&gt;@opendata26&lt;/a&gt;, &lt;a href=&quot;https://github.com/scintill&quot;&gt;@scintill&lt;/a&gt;, &lt;a href=&quot;https://github.com/Srinivas-Kandagatla&quot;&gt;@Srinivas-Kandagatla&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;linux-postmarketos-qcom&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#linux-postmarketos-qcom&quot;&gt;linux-postmarketos-qcom&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2018-06/mainline-sirius-plamo.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;border&quot; src=&quot;/static/img/2018-06/mainline-sirius-plamo-thumb.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
As we are running bleeding edge technology here, we need to use kernel patches that have not made their way into the mainline kernel yet. These patches are tiny in size, and the patch authors are trying to upstream them (in contrary to kernels from Android with vendor patches on the order of a hundred thousand to one million lines of changes, as the Linaro keynote mentions). We decided to set up a staging repository &lt;a href=&quot;https://github.com/postmarketOS/linux-postmarketos&quot;&gt;&lt;code&gt;linux-postmarketos&lt;/code&gt;&lt;/a&gt; for easy collaboration, and packaging the Qualcomm specific branch from there in a new package &lt;code&gt;linux-postmarketos-qcom&lt;/code&gt;. With the separate package, the patches won't break anything for non-Qualcomm devices that use an upstream kernel in postmarketOS.
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Two more devices besides the Nexus 5 are also using &lt;code&gt;linux-postmarketos-qcom&lt;/code&gt;. The &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Sony_Xperia_Z2_(sony-sirius)&quot;&gt;Sony Xperia Z2&lt;/a&gt; (shown on the right and below, not to be confused with the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Sony_Xperia_Z2_Tablet_(sony-castor-windy)&quot;&gt;tablet&lt;/a&gt;) ported by &lt;a href=&quot;https://github.com/opendata26&quot;&gt;@opendata26&lt;/a&gt; has battery capacity, temperature sensors, Wi-Fi and the display with 3D acceleration working! More great news: in theory one would need a closed source component to communicate with the cellular modem, but kernel hacker &lt;a href=&quot;https://github.com/andersson&quot;&gt;@andersson&lt;/a&gt; confirmed that Sony allowed him to release that as open source!&lt;/p&gt;
&lt;p&gt;The third device is the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung_Galaxy_S5_(samsung-klte)&quot;&gt;Samsung Galaxy S5&lt;/a&gt; contributed by &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt;. It is in an early porting stage, but so far the debug serial interface, volume buttons and internal storage access are working with the &lt;code&gt;linux-postmarketos-qcom&lt;/code&gt; kernel. If you want to use the display with postmarketOS, you still need to use the downstream kernel (which is packaged as well). Given all of these options for kernels, we now provide you an easy way to select your preferred kernel during the installation (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1363&quot;&gt;#1363&lt;/a&gt;, screenshot below).&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-bottom&quot;&gt;
&lt;a href=&quot;/static/img/2018-06/mainline-sirius-splash.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2018-06/mainline-sirius-splash-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2018-06/mainline-sirius-tty.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2018-06/mainline-sirius-tty-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2018-06/pmbootstrap-kernel-selection.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2018-06/pmbootstrap-kernel-selection-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/andersson&quot;&gt;@andersson&lt;/a&gt;, &lt;a href=&quot;https://github.com/bhush9&quot;&gt;@bshah&lt;/a&gt;, &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt;, &lt;a href=&quot;https://github.com/opendata26&quot;&gt;@opendata26&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;raspberry-pi-samsung-galaxy-tab-101-and-nokia-n9&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#raspberry-pi-samsung-galaxy-tab-101-and-nokia-n9&quot;&gt;Raspberry Pi, Samsung Galaxy Tab 10.1 and Nokia N9&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2018-06/mainline-raspberrypi-touch-screen.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;fr ml3 cr&quot; src=&quot;/static/img/2018-06/mainline-raspberrypi-touch-screen-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
Besides Qualcomm devices, we have a hand full of additional new ports running kernels that are very close to mainline. &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt; tweaked postmarketOS to run on all Raspberry Pi models up to version 3, building on the &lt;a href=&quot;https://wiki.alpinelinux.org/wiki/Raspberry_Pi&quot;&gt;existing support in Alpine&lt;/a&gt; (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1501&quot;&gt;#1501&lt;/a&gt;). &lt;a href=&quot;https://github.com/yangxuan8282&quot;&gt;@yangxuan8282&lt;/a&gt; did a lot of testing and took this photo of XFCE4 running on a small touch screen directly on the Pi. He also has multiple pull requests to support the Raspberry Pi 3B+.
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Next up is the Tegra-based &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung_Galaxy_Tab_10.1%22_(samsung-p4wifi)&quot;&gt;Samsung Galaxy Tab 10.1&lt;/a&gt; with an amazing functional feature list containing Wi-Fi, 2D acceleration, &lt;a href=&quot;https://en.wikipedia.org/wiki/VDPAU&quot;&gt;VDPAU&lt;/a&gt; h264 hardware decoding, headphone and speaker audio as well as bluetooth! &lt;a href=&quot;https://github.com/Decatf&quot;&gt;@Decatf&lt;/a&gt; added the device in &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1279&quot;&gt;#1279&lt;/a&gt;. The second photo below is a screenshot directly taken from the device.&lt;/p&gt;
&lt;p&gt;In the third picture below you can see the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Nokia_N9&quot;&gt;Nokia N9&lt;/a&gt;. We introduced the mainline kernel work &lt;a href=&quot;https://github.com/filippz&quot;&gt;@filippz&lt;/a&gt; and &lt;a href=&quot;https://github.com/pavelmachek&quot;&gt;@pavelmachek&lt;/a&gt; did in the &lt;a href=&quot;/blog/2017/12/31/219-days-of-postmarketOS/#nokia-n9xx-devices&quot;&gt;last post&lt;/a&gt;. Since then the port has been updated and merged into pmbootstrap's &lt;code&gt;master&lt;/code&gt; branch (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1101&quot;&gt;#1101&lt;/a&gt;). &lt;a href=&quot;https://github.com/pavelmachek&quot;&gt;@pavelmachek&lt;/a&gt; &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1046#issuecomment-354362721&quot;&gt;explained&lt;/a&gt; why the N9 and all other devices listed in this section have their own kernel packages instead of using &lt;code&gt;linux-postmarketos-stable&lt;/code&gt; (like the &lt;a href=&quot;/blog/2017/09/03/100-days-of-postmarketos/#mainline-kernel&quot;&gt;Nokia N900&lt;/a&gt;): &quot;We'll need quite a few patches for now, and it would be bad to break some other phone with patches relevant for N9. Long-term it is a goal, and we are not that far, but I don't think we should do it now.&quot;&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-bottom&quot;&gt;
&lt;a href=&quot;/static/img/2018-06/mainline-raspberrypi-tv.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2018-06/mainline-raspberrypi-tv-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2018-06/mainline-p4wifi.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2018-06/mainline-p4wifi-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2018-06/mainline-n9-xfce4.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2018-06/mainline-n9-xfce4-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/Decatf&quot;&gt;@Decatf&lt;/a&gt;, &lt;a href=&quot;https://github.com/filippz&quot;&gt;@filippz&lt;/a&gt;, &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt;, &lt;a href=&quot;https://github.com/pavelmachek&quot;&gt;@pavelmachek&lt;/a&gt;, &lt;a href=&quot;https://github.com/yangxuan8282&quot;&gt;@yangxuan8282&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;libhybris-and-optional-proprietary-components&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#libhybris-and-optional-proprietary-components&quot;&gt;Libhybris And Optional Proprietary Components&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2018-06/hybris-gemini-pda.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;fr ml3 cr&quot; src=&quot;/static/img/2018-06/hybris-gemini-pda-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
&lt;a href=&quot;https://github.com/NotKit&quot;&gt;@NotKit&lt;/a&gt;'s work on packaging &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1002&quot;&gt;libhybris&lt;/a&gt; has been merged (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1402&quot;&gt;#1402&lt;/a&gt;), which is the base for making proprietary userspace drivers from Android work with non-Android Linux distributions. More streamlining is necessary to actually use this when installing postmarketOS. However he made several demos already, including a port of postmarketOS with libhybris and 3D acceleration running on the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Planet_Computers_Gemini_PDA_(planet-geminipda)&quot;&gt;Gemini PDA&lt;/a&gt; (&lt;a href=&quot;https://www.indiegogo.com/projects/gemini-pda-android-linux-keyboard-mobile-device--2#/updates/49&quot;&gt;photo from here&lt;/a&gt;).
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;But don't we hate proprietary software from the deepest of our hearts? Most people in our community do. We have outlined numerous times on this blog that running proprietary blobs comes at the cost of making (security) updates almost impossible as soon as vendors drop their support. It is also much harder to verify that the binaries do not contain backdoors or other vulnerabilities.&lt;/p&gt;
&lt;p&gt;Then why do we allow libhybris to be a part of postmarketOS? Consider the countless phones and tablets that have been produced up to this point. We can be happy if we make a few of them work with a full FLOSS stack, but for most of them this won't happen any time soon, if ever. So should free software hackers throw all of them away? &lt;a href=&quot;https://www.fastcodesign.com/90165365/smartphones-are-wrecking-the-planet-faster-than-anyone-expected&quot;&gt;For the environmental conscious, this is not an option!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This means we can't have a one size fits all solution that makes everybody happy. Some people &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/756#issuecomment-368274455&quot;&gt;want the full FLOSS stack&lt;/a&gt;, even if that means Wi-Fi and telephony do not work because they lack free firmware. Others find proprietary firmware acceptable, but do not wish to run proprietary userspace code. And then there are folks who just want to make use of all peripherals of their device, even if it requires blobs in userspace. &lt;a href=&quot;/blog/2017/09/03/100-days-of-postmarketos/#why-we-evolve-in-many-directions&quot;&gt;We embrace all of these sides:&lt;/a&gt; nowadays you can choose how libre you want to go during the installation (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1254&quot;&gt;#1254&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; pmbootstrap init
&lt;span class=&quot;go&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Device [qemu-amd64]: example-example&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;This device has proprietary components, which trade some of your freedom with making more&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;peripherals work. We would like to offer full functionality without hurting your freedom,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;but this is currently not possible for your device.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;device-example-example-nonfree-firmware: modem, Wi-Fi, accelerated GPU&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Enable this package? (y/n) [y]:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;device-example-example-nonfree-userland: accelerated GPU&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Enable this package? (y/n) [n]:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/NotKit&quot;&gt;@NotKit&lt;/a&gt;, &lt;a href=&quot;https://github.com/ollieparanoid&quot;&gt;@ollieparanoid&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;initramfs-charging-and-maximum-attention&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#initramfs-charging-and-maximum-attention&quot;&gt;Initramfs: Charging and Maximum Attention&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;postmarketOS is able to show a nice battery loading screen while it is &quot;turned off&quot; and charging, because &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/1081&quot;&gt;@drebrez&lt;/a&gt; integrated &lt;a href=&quot;https://github.com/postmarketOS/charging-sdl&quot;&gt;&lt;code&gt;charging-sdl&lt;/code&gt;&lt;/a&gt; into the &lt;a href=&quot;https://en.wikipedia.org/wiki/Initial_ramdisk&quot;&gt;initramfs&lt;/a&gt; (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/1081&quot;&gt;#1081&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;When &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Porting_to_a_new_device&quot;&gt;porting pmOS to a new device&lt;/a&gt;, it may happen that the device doesn't do anything on first boot. The screen stays dark (or displays the OEM logo) and the USB networking does not come up. In this case we don't even know for sure if the kernel we just tested is booting at all, or if it crashed before even executing the initramfs code. But this information is crucial in order to use the right &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Troubleshooting:boot&quot;&gt;troubleshooting techniques&lt;/a&gt;. Thanks to &lt;a href=&quot;https://github.com/MayeulC&quot;&gt;@MayeulC&lt;/a&gt; we can install the &lt;code&gt;maximum-attention&lt;/code&gt; initramfs hook now, which will flash every LED it can find, as well as running the vibration motor (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1238&quot;&gt;#1238&lt;/a&gt;). Be prepared to see your device wandering across the table!&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-bottom&quot;&gt;
&lt;a href=&quot;/static/img/2018-06/charging-kminilte.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2018-06/charging-kminilte-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2018-06/charging-100.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2018-06/charging-100-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;video controls poster=&quot;/static/img/2018-06/attention-video.jpg&quot; width=&quot;150&quot; height=&quot;150&quot;&gt;
    &lt;source src=&quot;/static/video/2018-06/Attention-vpx.webm&quot; type=&quot;video/webm; codecs=vp9,vorbis&quot;&gt;
    &lt;source src=&quot;/static/video/2018-06/Attention-x264.webm&quot; type=&quot;video/mp4&quot;&gt;
    &lt;a href=&quot;/static/video/2018-06/Attention-vpx.webm&quot;&gt;
        &lt;img src=&quot;/static/img/2018-06/attention-video.jpg&quot;&gt;
    &lt;/a&gt;
&lt;/video&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt;, &lt;a href=&quot;https://github.com/MayeulC&quot;&gt;@MayeulC&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;new-uis&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#new-uis&quot;&gt;New UIs&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Just like typical Desktop Linux distributions, postmarketOS is not limited to one user interface. We have &lt;a href=&quot;https://en.wikipedia.org/wiki/Hildon&quot;&gt;Hildon&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/LuneOS&quot;&gt;LuneOS UI&lt;/a&gt;, &lt;a href=&quot;https://mate-desktop.org/&quot;&gt;MATE&lt;/a&gt;, &lt;a href=&quot;https://plasma-mobile.org/&quot;&gt;Plasma Mobile&lt;/a&gt;, &lt;a href=&quot;https://wayland.freedesktop.org/&quot;&gt;Weston&lt;/a&gt; and &lt;a href=&quot;https://xfce.org/&quot;&gt;XFCE4&lt;/a&gt; packaged already. LuneOS UI is currently disabled, because we need to re-integrate it with the latest QT upgrade in Alpine (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/1459&quot;&gt;#1459&lt;/a&gt;, help wanted). However, two new user interfaces have been contributed.&lt;/p&gt;
&lt;h3 id=&quot;i3wm&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#i3wm&quot;&gt;i3wm&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2018-06/i3-n900.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;fr ml3 cr&quot; src=&quot;/static/img/2018-06/i3-n900-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/static/img/2018-06/i3-n5110.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;fr ml3 cr&quot; src=&quot;/static/img/2018-06/i3-n5110-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
Tiling window managers like &lt;a href=&quot;https://i3wm.org/&quot;&gt;i3&lt;/a&gt; make as much use of the screen space as possible. If you have one window open, it is always full screen, two windows split the screen in half and so on. When thinking about this, that is not so different from what today's mainstream smartphone user interfaces do. The similarities end with the fact that you can use the touch screen to manage application windows on the phone, while in a tiling WM you would use the keyboard.&lt;/p&gt;
&lt;p&gt;We have found two ways to use i3 on a mobile device. &lt;a href=&quot;https://github.com/MartijnBraam&quot;&gt;@MartijnBraam&lt;/a&gt; did the obvious one with a keyboard in &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1225&quot;&gt;#1225&lt;/a&gt;, which works well with the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Nokia_N900_(nokia-rx51)&quot;&gt;Nokia N900&lt;/a&gt; (photo on the right, &lt;a href=&quot;https://www.reddit.com/r/unixporn/comments/7wt8ig/i3gaps_n900_restored_to_glory/&quot;&gt;more&lt;/a&gt;).
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Since i3 is about as resource lightweight as it gets, it is a pretty good match for that classic machine and a few people are using it! The other is extending i3 with touch controls. &lt;a href=&quot;https://github.com/michitux&quot;&gt;@michitux&lt;/a&gt; started packaging &lt;a href=&quot;https://github.com/ssmolkin1/i3touchmenu/&quot;&gt;i3touchmenu&lt;/a&gt; in &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1343&quot;&gt;#1343&lt;/a&gt; as you can see in the photo and &lt;a href=&quot;https://www.youtube.com/watch?v=4aRadGSQ_t4&quot;&gt;video&lt;/a&gt; of his &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung_Galaxy_Note_8.0_(Wi-Fi)_(samsung-n5110)&quot;&gt;Samsung Galaxy Note 8.0&lt;/a&gt; (that pull request is not merged in pmbootstrap's &lt;code&gt;master&lt;/code&gt; branch yet as of writing).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/fxkrait&quot;&gt;@fxkrait&lt;/a&gt;, &lt;a href=&quot;https://github.com/MartijnBraam&quot;&gt;@MartijnBraam&lt;/a&gt;, &lt;a href=&quot;https://github.com/michitux&quot;&gt;@michitux&lt;/a&gt;, &lt;a href=&quot;https://github.com/sicelo&quot;&gt;@sicelo&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;matchbox&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#matchbox&quot;&gt;Matchbox&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2018-06/matchbox-lt023g.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;fr ml3 cr&quot; src=&quot;/static/img/2018-06/matchbox-lt023g-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
&lt;a href=&quot;https://github.com/duncanguthrie&quot;&gt;@duncanguthrie&lt;/a&gt; had fun with porting the old school Matchbox window manager to postmarketOS (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1420&quot;&gt;#1420&lt;/a&gt;). This is part of his quest of bringing back a classic PDA-like experience, as detailed in the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Handhelds&quot;&gt;Handheld&lt;/a&gt; wiki article he wrote. The photo on the right shows it running on the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung_Galaxy_Tab_3_7.0_(samsung-lt023g)&quot;&gt;Samsung Galaxy Tab 3 7.0&lt;/a&gt;.
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/duncanguthrie&quot;&gt;@duncanguthrie&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;postmarketos-lowlevel-3-broms-dumped&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#postmarketos-lowlevel-3-broms-dumped&quot;&gt;#postmarketOS-lowlevel: 3 BROMs Dumped&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2018-06/pixelated-logo.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;fr ml3 cr mb4&quot; src=&quot;/static/img/2018-06/pixelated-logo-thumb.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
Speaking of free firmware: our recently established &lt;a href=&quot;/blog/2018/04/14/lowlevel/&quot;&gt;#postmarketOS-lowlevel&lt;/a&gt; crew is taking baby steps towards liberating bootloaders for MediaTek devices. Around the time of the announcement blog post in April, quite a few people have joined the channel and started contributing. Notably &lt;a href=&quot;https://github.com/cyrozap&quot;&gt;@cyrozap&lt;/a&gt; has managed to dump the Boot ROMs (BROMs) of the MT6797 (Helio X20) and the MT6737M.
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The first was dumped via &lt;a href=&quot;https://en.wikipedia.org/wiki/JTAG&quot;&gt;JTAG&lt;/a&gt;, and the second was dumped from &lt;code&gt;/dev/mem&lt;/code&gt; by modifying the preloader to remove some memory access restrictions that prevented Linux from reading the BROM. Together with the BROM of the MT6735P extracted by &lt;a href=&quot;https://github.com/McBitter&quot;&gt;@McBitter&lt;/a&gt;, there's a lot of potential to understand the boot process with greater detail. After proper reverse engineering, we should better understand how boot metadata is formatted on the flash memory and possibly find new options to recover from a bad flash. In addition, a better understanding of the firmware signature verification process performed by the BROM could enable us to discover vulnerabilities and bypass these restrictions.&lt;/p&gt;
&lt;p&gt;In order to replace components in the low level boot process on these SoCs, we also need to understand what state the BROM leaves the chip in after it has finished executing. For instance, we want to know if the BROM disables any debugging functionality, makes use of write-once registers, or disables memory regions and registers. That information might be useful for porting U-Boot SPL (Secondary Program Loader) to the platform, which would replace the proprietary preloader.&lt;/p&gt;
&lt;p&gt;If you're asking yourself why we don't simply look at a bunch of datasheets instead, &lt;a href=&quot;https://github.com/cyrozap&quot;&gt;@cyrozap&lt;/a&gt; noted: &quot;Basically, since we don't have much documentation on how the BROM works (and since documentation often lies or isn't the whole truth, anyways), we need to discover for ourselves how it works in order to write our own documentation for it.&quot;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/cyrozap&quot;&gt;@cyrozap&lt;/a&gt;, &lt;a href=&quot;https://github.com/McBitter&quot;&gt;@McBitter&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;40-new-devices-84-total&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#40-new-devices-84-total&quot;&gt;40 New Devices (84 Total)&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;/static/img/2018-06/devices-over-time.svg&quot;&gt;&lt;img alt=&quot;Graph of the number of devices in the repository over time&quot; class=&quot;wfull&quot; src=&quot;/static/img/2018-06/devices-over-time.svg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We're having pretty much constant growth in the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Devices&quot;&gt;list of booting devices&lt;/a&gt; as you can see in the graph. Here are the new ones:&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2018-06/new-asus-t00f-mate.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;fr ml3 cr mb4&quot; src=&quot;/static/img/2018-06/new-asus-t00f-mate-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/static/img/2018-06/new-motorola-harpia.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;fr ml3 cr mb4&quot; src=&quot;/static/img/2018-06/new-motorola-harpia-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Asus Zenfone 5 (asus-t00f)&quot;&gt;Asus Zenfone 5 &lt;code&gt;asus-t00f&lt;/code&gt;&lt;/a&gt; &lt;em&gt;(shown on the right)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Asus-tf101-(ASUS-Transformer-TF101)&quot;&gt;Asus Eee Pad Transformer &lt;code&gt;asus-tf101&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Geeksphone Peak (gp-peak)&quot;&gt;Geeksphone Peak &lt;code&gt;gp-peak&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/HTC_Desire_816_single_SIM_(htc-a5ul)&quot;&gt;HTC Desire 816 &lt;code&gt;htc-a5ul&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Google Nexus 9 (htc-flounder)&quot;&gt;Google Nexus 9 &lt;code&gt;htc-flounder&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/HTC One M8 (htc-m8)&quot;&gt;HTC One M8 &lt;code&gt;htc-m8&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/HTC_Incredible_S_(htc-vivo)&quot;&gt;HTC Incredible S &lt;code&gt;htc-vivo&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/InFocus New Tab F1 (infocus-flatfish)&quot;&gt;InFocus New Tab F1 &lt;code&gt;infocus-flatfish&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Jolla_Phone_(jolla-sbj)&quot;&gt;Jolla phone &lt;code&gt;jolla-sbj&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/LeEco_Le_2&quot;&gt;LeEco Le 2 &lt;code&gt;leeco-s2&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Google Nexus 5X(lg-bullhead)&quot;&gt;Google Nexus 5X &lt;code&gt;lg-bullhead&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Motorola Moto G4(motorola-athene)&quot;&gt;Motorola Moto G4 &lt;code&gt;motorola-athene&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Moto G 2013 (motorola-falcon)&quot;&gt;Motorola Moto G (2013) &lt;code&gt;motorola-falcon&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Moto G4 Play (motorola-harpia)&quot;&gt;Motorola Moto G4 Play &lt;code&gt;motorola-harpia&lt;/code&gt;&lt;/a&gt; &lt;em&gt;(pictured on the bottom right)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Motorola_Droid_4_(motorola-maserati)&quot;&gt;Motorola Droid 4 &lt;code&gt;motorola-maserati&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Moto G 4G 2013 (motorola-peregrine)&quot;&gt;Motorola Moto G 4G (2013) &lt;code&gt;motorola-peregrine&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Motorola Moto G5 Plus(motorola-potter)&quot;&gt;Motorola Moto G5 Plus &lt;code&gt;motorola-potter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Google Nexus 6 (motorola-shamu)&quot;&gt;Google Nexus 6 &lt;code&gt;motorola-shamu&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Nextbit Robin&quot;&gt;Nextbit Robin &lt;code&gt;nextbit-robin&lt;/code&gt;&lt;/a&gt; &lt;em&gt;(first below)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Nokia_N9&quot;&gt;Nokia N9 &lt;code&gt;nokia-n9&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/OnePlus Two (oneplus-oneplus2)&quot;&gt;OnePlus 2 &lt;code&gt;oneplus-oneplus2&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Raspberry_Pi&quot;&gt;Raspberry Pi &lt;code&gt;raspberry-pi&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung Galaxy Tab S2 9.7 Wifi (samsung-gts210vewifi)&quot;&gt;Galaxy Tab S2 9.7 WiFi (SM-T813) &lt;code&gt;samsung-gts210vewifi&lt;/code&gt;&lt;/a&gt; &lt;em&gt;(second below)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung Galaxy SIII mini (samsung-i8190)&quot;&gt;Samsung Galaxy SIII mini &lt;code&gt;samsung-i8190&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung Galaxy S4 Mini LTE&quot;&gt;Samsung Galaxy S4 Mini &lt;code&gt;samsung-i9195&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung_Galaxy_S5_(samsung-klte)&quot;&gt;Samsung Galaxy S5 &lt;code&gt;samsung-klte&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung_Galaxy_S5_mini_(samsung-kminilte)&quot;&gt;Samsung Galaxy S5 Mini &lt;code&gt;samsung-kminilte&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung Galaxy Ace II X (samsung-kylessopen)&quot;&gt;Samsung Galaxy Trend &lt;code&gt;samsung-kylessopen&lt;/code&gt;&lt;/a&gt; &lt;em&gt;(third below)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung Galaxy Tab 3 7.0 (samsung-lt023g)&quot;&gt;Samsung Galaxy Tab 3 7.0 &lt;code&gt;samsung-lt023g&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Google Nexus 10 (samsung-manta)&quot;&gt;Google Nexus 10 &lt;code&gt;samsung-manta&lt;/code&gt;&lt;/a&gt; &lt;em&gt;(fourth below)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung Galaxy Note 8.0 (Wi-Fi) (samsung-n5110)&quot;&gt;Samsung Galaxy Note 8.0 (Wi-Fi) &lt;code&gt;samsung-n5110&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung_Galaxy_Tab_10.1%22_(samsung-p4wifi)&quot;&gt;Samsung Galaxy Tab 10.1 &lt;code&gt;samsung-p4wifi&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Sony Ericsson Xperia Arc (semc-anzu)&quot;&gt;Xperia Arc &lt;code&gt;semc-anzu&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Sony Xperia Z3 Tablet Compact (sony-scorpion)&quot;&gt;Xperia Z3 Tablet Compact &lt;code&gt;sony-scorpion&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Sony Xperia T3 (sony-seagull)&quot;&gt;Sony Xperia T3 &lt;code&gt;sony-seagull&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Sony Xperia Z2 (sony-sirius)&quot;&gt;Sony Xperia Z2 &lt;code&gt;sony-sirius&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Xiaomi_Redmi_1S_(xiaomi-armani)&quot;&gt;Xiaomi Redmi 1S &lt;code&gt;xiaomi-armani&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Xiaomi_Redmi_Note_4_(mido)&quot;&gt;Xiaomi Redmi Note 4 &lt;code&gt;xiaomi-mido&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Xiaomi_RedMi4x_(xiaomi-santoni)&quot;&gt;Xiaomi Redmi 4X &lt;code&gt;xiaomi-santoni&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/ZTE_Kis_3_(zte-kis3)&quot;&gt;ZTE Kis 3 &lt;code&gt;zte-kis3&lt;/code&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-bottom&quot;&gt;
&lt;a href=&quot;/static/img/2018-06/new-nextbit-robin.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2018-06/new-nextbit-robin-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2018-06/new-samsung-gts210vewifi.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2018-06/new-samsung-gts210vewifi-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2018-06/new-samsung-kylessopen.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2018-06/new-samsung-kylessopen-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2018-06/new-samsung-manta.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2018-06/new-samsung-manta-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Thanks to: everyone who ported these devices, see the contributors section in each device's wiki page.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;pmbootstrap-improvements&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#pmbootstrap-improvements&quot;&gt;pmbootstrap Improvements&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;One area that we consistently spend a lot of time improving is our swiss army knife of postmarketOS development, installation and flashing: &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap&quot;&gt;&lt;code&gt;pmbootstrap&lt;/code&gt;&lt;/a&gt;. Let's break it down.&lt;/p&gt;
&lt;h3 id=&quot;continuous-integration-build-packages-and-qemu-test&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#continuous-integration-build-packages-and-qemu-test&quot;&gt;Continuous Integration: Build Packages And QEMU Test&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Whenever someone got their new device port to a point where it boots, the porting guide recommends that they make a pull request and upstream it so everyone can benefit from the work that has been done and build upon it. In order to keep the reviewing efforts as low as possible, the following new CI checks were implemented:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All devices must be &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Devices&quot;&gt;documented in the wiki&lt;/a&gt; (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1369&quot;&gt;#1369&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;All changed packages must build (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/982&quot;&gt;#982&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/982&quot;&gt;#982&lt;/a&gt; also has a new test case that instructs &lt;code&gt;pmbootstrap&lt;/code&gt; to do two full installations (one of them with XFCE4, the other one with Plasma Mobile). Both installations will then run in QEMU, and the test case will connect via SSH to the VM to verify the running processes. This has already saved us more than once from introducing bugs by accident in the installation code.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/ollieparanoid&quot;&gt;@ollieparanoid&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;development-local-source-newapkbuild-x11-menuconfig-and-basic-zsh-completion&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#development-local-source-newapkbuild-x11-menuconfig-and-basic-zsh-completion&quot;&gt;Development: Local Source, Newapkbuild, X11 Menuconfig And Basic ZSH Completion&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Patch development has gotten a lot easier, because now it is possible to replace the source tarball downloaded from the web on the fly with a local source code folder (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1210#issuecomment-364590002&quot;&gt;#1210&lt;/a&gt;). Furthermore we are wrapping &lt;a href=&quot;https://wiki.alpinelinux.org/wiki/Newapkbuild&quot;&gt;Alpine's &lt;code&gt;newapkbuild&lt;/code&gt;&lt;/a&gt; to quickly generate standard package build recipes for various build systems with just one shell command (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/894&quot;&gt;#894&lt;/a&gt;, &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1320&quot;&gt;#1320&lt;/a&gt;). In addition &lt;a href=&quot;https://github.com/steamp0rt&quot;&gt;@steamp0rt&lt;/a&gt; made it possible to use the GTK or QT based kernel configuration with &lt;code&gt;pmbootstrap kconfig edit [-x | -g]&lt;/code&gt; for those who prefer them over the ncurses based one (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1509&quot;&gt;#1509&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1232&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wfull border&quot; src=&quot;/static/img/2018-06/pmbootstrap-zsh-completion.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As a hacker working with &lt;code&gt;pmbootstrap&lt;/code&gt;, you don't need to keep the growing list of things it can do in your head. Instead, there's the &lt;code&gt;--help&lt;/code&gt; output and the all-new &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/blob/master/README.md&quot;&gt;README.md&lt;/a&gt;, which is basically a big cheat sheet with lots of example commands. You can also make use of the rudimentary ZSH autocompletion (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1232&quot;&gt;#1232&lt;/a&gt;). Right now it can do basic stuff like extending &lt;code&gt;pmbootstrap newa&amp;lt;tab&amp;gt;&lt;/code&gt; to &lt;code&gt;pmbootstrap newapkbuild&lt;/code&gt;. Help is wanted (see &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/1517&quot;&gt;#1517&lt;/a&gt;) for implementing more sophisticated functionality!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/ollieparanoid&quot;&gt;@ollieparanoid&lt;/a&gt;, &lt;a href=&quot;https://github.com/steamp0rt&quot;&gt;@steamp0rt&lt;/a&gt;, &lt;a href=&quot;https://github.com/V13Axel&quot;&gt;@V13Axel&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;installation-custom-hostname-new-parameters-rsync-and-split&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#installation-custom-hostname-new-parameters-rsync-and-split&quot;&gt;Installation: Custom Hostname, New Parameters --rsync and --split&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt; made it possible to set a custom hostname, with the device's code name being the default (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1327&quot;&gt;#1327&lt;/a&gt;). Wearing down SD cards during multiple installations can be prevented with &lt;a href=&quot;https://github.com/pavelmachek&quot;&gt;@pavelmachek&lt;/a&gt;'s new  &lt;code&gt;--rsync&lt;/code&gt; feature to only update what has been changed in the file system since the previous installation (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1151&quot;&gt;#1151&lt;/a&gt;). Lastly a new &lt;code&gt;--split&lt;/code&gt; parameter allows you to split the boot and root partitions, instead of combining them to one partition with subpartitions (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1442&quot;&gt;#1442&lt;/a&gt;). This makes the mainlining workflow easier, because the latter method &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/1049&quot;&gt;does not work&lt;/a&gt; with recently mainlined devices like the Nexus 5 yet.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt;, &lt;a href=&quot;https://github.com/pavelmachek&quot;&gt;@pavelmachek&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;raw-numbers&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#raw-numbers&quot;&gt;Raw Numbers&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;350 people in the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Matrix_and_IRC&quot;&gt;channel&lt;/a&gt; (+75)&lt;/li&gt;
&lt;li&gt;1756 &lt;a href=&quot;https://www.reddit.com/r/postmarketOS/&quot;&gt;/r/postmarketOS&lt;/a&gt; readers (+380)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap&quot;&gt;pmbootstrap&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;996 stargazers &lt;em&gt;(+233)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;867 closed PRs &lt;em&gt;(+313)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;497 closed issues &lt;em&gt;(+161)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;149 open issues &lt;em&gt;(+15)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;168 forks &lt;em&gt;(+66)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;93 watchers &lt;em&gt;(+19)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;106 contributors (&lt;code&gt;git shortlog --summary --numbered | wc -l&lt;/code&gt;) &lt;em&gt;(+49)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;get-involved&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#get-involved&quot;&gt;Get Involved&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;mainline-your-device&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#mainline-your-device&quot;&gt;Mainline Your Device!&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Mainlining expert &lt;a href=&quot;https://github.com/opendata26&quot;&gt;@opendata26&lt;/a&gt; encourages our readers to join the effort: &quot;One thing I think we should really highlight is that if they have decent knowledge of Linux and if they have a supported SoC - I would say S4 Pro, Snapdragon 820 (you would want &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Serial_debugging&quot;&gt;UART&lt;/a&gt; for that but once it's running most stuff should work), 845 (same as 820, just need tons of patches on &lt;a href=&quot;https://patchwork.kernel.org/project/linux-arm-msm/list/&quot;&gt;patchwork&lt;/a&gt;), 410, 801, 600 and probably S4 (non pro). That they can feel free to &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Matrix_and_IRC&quot;&gt;join the Matrix&lt;/a&gt; and that it's very likely we'll end up with a working mainline kernel.&quot; Working means in this context anything from &quot;it boots&quot; to having all the features working that we presented above. The latter is a bigger challenge of course.&lt;/p&gt;
&lt;p&gt;Hackers ready for this exercise can check out the brand-new &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Mainline_Guide&quot;&gt;Mainlining Guide&lt;/a&gt; in our wiki. It provides several shortcuts to help speed you along, such as having &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Mainline_Guide#envkernel.sh&quot;&gt;one command&lt;/a&gt; that exports the right environment variables for your device and sets up a known working Alpine Linux chroot with all required packages for cross compiling the kernel without modifying your host system (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1424&quot;&gt;#1424&lt;/a&gt;). The &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Mainlining_Guide#Mentor&quot;&gt;mentors&lt;/a&gt; listed in the guide can help you to create your &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Device_Tree_(dtb)&quot;&gt;device tree source&lt;/a&gt; file, which tells the kernel the location and parameters of all the peripherals in your little mobile computer. Because these peripherals are used over and over again in different devices, oftentimes we can just enable them without writing new drivers!&lt;/p&gt;
&lt;h3 id=&quot;more-ways-to-help-out&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#more-ways-to-help-out&quot;&gt;More Ways to Help Out&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We have a ton of &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues?utf8=%E2%9C%93&amp;amp;q=sort%3Aupdated-desc%20&quot;&gt;quests ready to be picked up&lt;/a&gt;. Whether it's simply helping out other people with thinking through how they could debug issues on their devices, fixing bugs, implementing cool new features towards the goal of having postmarketOS usable on a daily driver level or straight up &lt;a href=&quot;https://drewdevault.com/2018/03/17/Hack-everything-without-fear.html&quot;&gt;hacking everything without fear&lt;/a&gt;: there is a lot to learn and a lot of fun to have!&lt;/p&gt;
&lt;p&gt;Specific examples:
&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2018-06/anbox-starting.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;fr mr3&quot; src=&quot;/static/img/2018-06/anbox-starting-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Porting_to_a_new_device&quot;&gt;Port your phone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Installation_guide&quot;&gt;Install postmarketOS&lt;/a&gt; on your machines if there's already a port&lt;/li&gt;
&lt;li&gt;Make &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Making_good_photos&quot;&gt;good photos/videos&lt;/a&gt; of devices running postmarketOS for the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Special:ListFiles&quot;&gt;wiki&lt;/a&gt; and &lt;a href=&quot;https://www.reddit.com/r/postmarketOS/&quot;&gt;/r/postmarketOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/1286&quot;&gt;#1286&lt;/a&gt;: packaging &lt;a href=&quot;https://anbox.io/&quot;&gt;Anbox&lt;/a&gt;, an experimental project that runs Android apps on regular Linux distributions. After some patching we have it compiling and displaying the &quot;Starting...&quot; screen (pictured on the right), but the way it configures LXC does not work out of the box for us. To move forward, one could install Anbox on Ubuntu (where it is officially supported) and add debug code to Anbox and LXC to figure out what it does differently there.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/592&quot;&gt;#592&lt;/a&gt;: integrating &lt;a href=&quot;https://nexmon.org&quot;&gt;nexmon&lt;/a&gt; so we can patch security holes in abandoned Wi-Fi firmware.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/62&quot;&gt;#62&lt;/a&gt; Improve or package your favorite user interface.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pulls&quot;&gt;Testing and/or reviewing pull requests&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If your passion is writing text instead of code: we could use some help with these blog posts. It boils down to going through the &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues?q=is%3Apr+is%3Aclosed&quot;&gt;closed pull requests&lt;/a&gt; and photos posted in the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Matrix_and_IRC&quot;&gt;chatroom&lt;/a&gt;, categorizing them into logical sections before writing one paragraph after another and adding images to round it up. Contributing to any step of that process would be greatly appreciated and saves us a lot of time that we could put in other areas of the project. Get in touch with us in the &lt;a href=&quot;https://github.com/postmarketOS/postmarketos.org/issues&quot;&gt;postmarketOS.org issues&lt;/a&gt;. Another good place to exercise your writing skills to help out postmarketOS would be &lt;a href=&quot;https://wiki.postmarketos.org&quot;&gt;the wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Our friends from Plasma Mobile have set up their &lt;a href=&quot;https://plasma-mobile.org/findyourway/&quot;&gt;Find Your Way&lt;/a&gt; page the other day. It is like a super convenient frontend to their &lt;a href=&quot;https://phabricator.kde.org/tag/plasma%3A_mobile/&quot;&gt;issues tracker&lt;/a&gt;, which asks you a few simple questions like &quot;Are you interested in App development?&quot; and then takes you to the right ticket. If you could help out with any of these, you would directly contribute towards Plasma Mobile reaching 1.0 state.&lt;/p&gt;
&lt;h2 id=&quot;no-end-in-sight&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#no-end-in-sight&quot;&gt;No End In Sight&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2018-06/nintendo-switch.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;fr ml3 cr mb4&quot; src=&quot;/static/img/2018-06/nintendo-switch-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
While this blog post is being being written, the next stunning pull requests are already rolling in (e.g. Nintendo Switch in &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1534&quot;&gt;#1534&lt;/a&gt;). Hackers are helping out each other in the various &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Matrix_and_IRC&quot;&gt;#postmarketOS chats&lt;/a&gt; and coming up with cool new ideas of using postmarketOS or simply bringing it closer to something acceptable for daily use. Some people who just joined the project have already made critical bug fixes like &lt;a href=&quot;https://github.com/michitux&quot;&gt;@michitux&lt;/a&gt; in &lt;a href=&quot;https://github.com/alpinelinux/aports/pull/3889&quot;&gt;alpinelinux/aports#3889&lt;/a&gt;. Others silently expand our wiki. We get stuff done and have a ton of fun while doing it, and everyone involved should be proud of what we've accomplished together in just one year! Whoever has the chance to visit &lt;a href=&quot;https://akademy.kde.org/2018/&quot;&gt;Akademy 2018 in Vienna&lt;/a&gt;, make sure to meet the few of us who will celebrate there and watch &lt;a href=&quot;https://github.com/ata2001&quot;&gt;@ata2001&lt;/a&gt;'s &lt;a href=&quot;https://conf.kde.org/en/Akademy2018/public/events/67&quot;&gt;presentation about postmarketOS&lt;/a&gt; live on stage!
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here's to many more years of exciting postmarketOS developments!&lt;/p&gt;
&lt;h2 id=&quot;what-do-you-think&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#what-do-you-think&quot;&gt;What do you think?&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://old.reddit.com/r/postmarketOS/duplicates/8prhzy/one_year_of_postmarketos_mainline_calling/&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=17272122&quot;&gt;HN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry xml:base="https://postmarketos.org/blog/feed.atom">
    <title type="text">postmarketOS Low-Level: Tiny Steps Towards Liberating Bootloaders and Cellular Modem Firmware of MediaTek Phones</title>
    <id>https://postmarketos.org/blog/2018/04/14/lowlevel/</id>
    <updated>2018-04-14T00:00:00Z</updated>
    <link href="https://postmarketos.org/blog/2018/04/14/lowlevel/" />
    <content type="html">&lt;h1 id=&quot;introducing-postmarketos-lowlevel&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#introducing-postmarketos-lowlevel&quot;&gt;Introducing #postmarketOS-lowlevel&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;img alt=&quot;&quot; class=&quot;fr ml3&quot; src=&quot;/static/img/2018-04/lowlevel.png&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
As a community project, and one that &lt;a href=&quot;https://postmarketos.org/blog/2017/09/03/100-days-of-postmarketos/#why-we-evolve-in-many-directions&quot;&gt;encourages contributors to work on what they like&lt;/a&gt;, we have attracted people with a broad range of interests and skill levels.  Recently a small hacking group &lt;a href=&quot;https://matrix.to/#/#postmarketos-lowlevel:disroot.org&quot;&gt;#postmarketOS-lowlevel&lt;/a&gt; has emerged, and its masterminds &lt;a href=&quot;https://github.com/McBitter&quot;&gt;@McBitter&lt;/a&gt; and &lt;a href=&quot;https://github.com/unrznbl&quot;&gt;@unrznbl&lt;/a&gt; are eager to introduce you to the madness that awaits when digging deeper and deeper in the embedded hardware and software stack.
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;But before we get started, please keep in mind that these are moon shots. So while there is some little progress, it's mostly about letting fellow hackers know what we've tried and what we're up to, in the hopes of attracting more interested talent to our cause. After all, our philosophy is to keep the community informed and engaged during the development phase!&lt;/p&gt;
&lt;p&gt;For those new to postmarketOS, we are a group of developers, hackers, and hobbyists who have come together with a common goal of giving a ten year life cycle to mobile phones.  This is accomplished by using a simple and sustainable architecture borrowed from typical Linux distributions, instead of using Android's build system.  The project is at an early stage and isn't useful for most people at this point.  Check out the newly-updated &lt;a href=&quot;https://postmarketos.org&quot;&gt;front page&lt;/a&gt; for more information, the &lt;a href=&quot;https://postmarketos.org/blog/2017/12/31/219-days-of-postmarketOS/&quot;&gt;previous blog post&lt;/a&gt; for recent achievements, and the &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pulls?q=is%3Apr+is%3Aclosed&quot;&gt;closed pull requests&lt;/a&gt; to be informed about what's going on up to the current minute.&lt;/p&gt;
&lt;p&gt;Let's dive in!&lt;/p&gt;
&lt;h1 id=&quot;open-bootloader-for-mt6735p&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#open-bootloader-for-mt6735p&quot;&gt;Open Bootloader for MT6735P&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2018-04/Coolpad-back-opened.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;w200&quot; src=&quot;/static/img/2018-04/Coolpad-back-opened-thumb.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
On the right you can see photos of a &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Coolpad_Modena_2_(coolpad-modena2)&quot;&gt;Coolpad Modena 2&lt;/a&gt;, which was built around MediaTek's MT6735P SoC (&lt;a href=&quot;https://en.wikipedia.org/wiki/System_on_a_chip&quot;&gt;System on a chip&lt;/a&gt;). In case you are wondering why we're not showing a picture with postmarketOS running on it: we can't! This is because the vendor decided to ship it with a closed down bootloader, which prevents users from running custom kernels.&lt;/p&gt;
&lt;p&gt;Just like most Android phones, the bootloader of this particular device is based on LK (&lt;a href=&quot;https://github.com/littlekernel/lk/wiki/Introduction&quot;&gt;Little Kernel&lt;/a&gt;). In fact the source code for LK is available under the &lt;a href=&quot;https://en.wikipedia.org/wiki/MIT_License&quot;&gt;MIT license&lt;/a&gt; and just about every smartphone implementing the &lt;a href=&quot;https://en.wikipedia.org/wiki/Android_software_development#Fastboot&quot;&gt;fastboot protocol&lt;/a&gt; has some kind of LK installed. The downside to this license is that it also allows the vendor to create a fork of the bootloader without giving the customers the changed source code, and unfortunately it is common practice for vendors to make use of this right.
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2018-04/Coolpad-front.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;w200&quot; src=&quot;/static/img/2018-04/Coolpad-front-thumb.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
So there's the proprietary program &quot;SP Flash Tool&quot; (&lt;a href=&quot;https://www.reddit.com/r/postmarketOS/comments/7ps3gp/do_you_own_a_mediatek_phone_help_with_reversing/&quot;&gt;interested in reversing?&lt;/a&gt;), which allows flashing a new bootloader to MediaTek smartphones. This means if our goal was just bypassing the kernel limitation, we could create a binary patch for the existing bootloader, which removes the restriction, flash that and be done with it!&lt;/p&gt;
&lt;p&gt;However, &lt;a href=&quot;https://github.com/McBitter&quot;&gt;@McBitter&lt;/a&gt; is not interested in this messy workaround. He would rather eliminate the need to run this closed source blob altogether and make the upstream LK code run on the MT6735P! This approach gives us an elegant solution for incrementally porting LK to other MediaTek SoCs by re-using the same shared LK source code in the process! Why go through this trouble for an seemingly obscure device? Consider &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_devices_using_Mediatek_SoCs#MT6735&quot;&gt;this Wikipedia article for devices based on MediaTek SoCs&lt;/a&gt;, detailing a wide range of manufacturers using these chips besides Coolpad. Just to name a few:
&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;hTC&lt;/li&gt;
&lt;li&gt;Huawei&lt;/li&gt;
&lt;li&gt;Lenovo&lt;/li&gt;
&lt;li&gt;LG&lt;/li&gt;
&lt;li&gt;Moto&lt;/li&gt;
&lt;li&gt;Sony&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The best part is that all the information collected in the process of porting upstream LK also contributes a significant step towards booting mainline Linux on these devices.&lt;/p&gt;
&lt;h2 id=&quot;serial-access-without-hardware-modification&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#serial-access-without-hardware-modification&quot;&gt;Serial Access Without Hardware Modification?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;https://wiki.postmarketos.org/wiki/File:Mozilla-flame-pcb.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;border&quot; src=&quot;/static/img/2018-04/flame-serial-thumb.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
The first idea was to get some kind of debug output, and the most obvious way to get that on such a low-level is the &lt;a href=&quot;https://en.wikipedia.org/wiki/Serial_port&quot;&gt;serial port&lt;/a&gt;. Some phones like the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Mozilla_Flame_(t2m-flame)&quot;&gt;Mozilla Flame&lt;/a&gt; on the right (not MediaTek based) make it relatively easy to &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Serial_debugging#Mozilla_Flame&quot;&gt;access the serial pins&lt;/a&gt;. However, most MediaTek devices don't have their serial ports wired up and/or exposed on their boards, so it's not that easy: &quot;I could do hardware modification,&quot; &lt;a href=&quot;https://github.com/McBitter&quot;&gt;@McBitter&lt;/a&gt; said, &quot;but all the side effects of this outweigh the risks.&quot; As a result, this option was out.
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;While it would be possible to &lt;a href=&quot;http://www.stevenhoneyman.co.uk/2014/11/mtk-mediatek-debug-cable.html&quot;&gt;connect a serial cable&lt;/a&gt; to the USB port of many MediaTek devices, &lt;a href=&quot;https://github.com/McBitter&quot;&gt;@McBitter&lt;/a&gt; and &lt;a href=&quot;https://github.com/unrznbl&quot;&gt;@unrznbl&lt;/a&gt; had a different concept that would turn it up to eleven.&lt;/p&gt;
&lt;h2 id=&quot;instrumentation-with-qemu&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#instrumentation-with-qemu&quot;&gt;Instrumentation With QEMU?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2018-04/Instrumentation-overview.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;w200 border&quot; src=&quot;/static/img/2018-04/Instrumentation-overview.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
What if we sent memory read commands to the board and mirrored the device's memory in &lt;a href=&quot;https://www.qemu.org&quot;&gt;QEMU&lt;/a&gt;? Then we would be able to attach &lt;a href=&quot;https://www.gnu.org/software/gdb/&quot;&gt;GDB&lt;/a&gt; to QEMU's &lt;a href=&quot;https://stackoverflow.com/a/2615816&quot;&gt;GDB stub&lt;/a&gt;, and view code as it runs! Stepping through LK and OsmocomBB (more on that below) in a debugger would make porting so much easier!
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2018-04/Memory-read-test.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;border&quot; src=&quot;/static/img/2018-04/Memory-read-test.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
Using an interface in the &lt;a href=&quot;http://read.pudn.com/downloads119/sourcecode/comm/mtk/507390/System_and_Debug/System_Service/BROM_Design_V2.0.0.pdf&quot;&gt;MediaTek Boot ROM&lt;/a&gt;, &lt;a href=&quot;https://github.com/McBitter&quot;&gt;@McBitter&lt;/a&gt; worked on accessing MediaTek devices' memory via USB. Based on USB captures taken while flashing with the SP Flash Tool, &lt;a href=&quot;https://github.com/McBitter&quot;&gt;@McBitter&lt;/a&gt; wrote &lt;a href=&quot;https://github.com/McBitter/flasher/blob/19174c21ab8a8301cbccc536808580b058f81332/main.c&quot;&gt;test code&lt;/a&gt; to read memory using that interface. The diagram on the right shows how it would have worked in theory. But unfortunately MediaTek placed restrictions on the memory locations that the Boot ROM can read. As you can see in the other picture, reading out the entire memory is not possible. It works for some areas, but others just return &lt;code&gt;-1&lt;/code&gt; instead of the requested amount of bytes to read.&lt;/p&gt;
&lt;p&gt;The memory restrictions would make debugging with QEMU impossible.
&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;dram-calibration-data-obtained&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#dram-calibration-data-obtained&quot;&gt;DRAM Calibration Data Obtained!&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;/static/img/2018-04/IDA-memory-calibration.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wfull&quot; src=&quot;/static/img/2018-04/IDA-memory-calibration.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The months rolled by with many new theories being tested without, unfortunately, having even the tiniest bit of success. After taking a break for a few weeks, &lt;a href=&quot;https://github.com/McBitter&quot;&gt;@McBitter&lt;/a&gt; changed his focus to the earliest piece of code of the boot process that can be modified, which is the preloader. The preloader &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Mediatek#Booting_procedure&quot;&gt;is loaded by&lt;/a&gt; the BROM (boot &lt;a href=&quot;https://en.wikipedia.org/wiki/Read-only_Memory&quot;&gt;read-only memory&lt;/a&gt;), which in turn loads LK.&lt;/p&gt;
&lt;p&gt;The BROM is only able to initialize the SRAM (&lt;a href=&quot;https://en.wikipedia.org/wiki/Static_random-access_memory&quot;&gt;static random-access memory&lt;/a&gt;), which is very small and expensive (but fast, it gets used for CPU caches as well). In contrast, the &quot;real&quot; RAM (in the order of gigabytes nowadays) most of us may be familiar with is the cheaper DRAM (&lt;a href=&quot;https://en.wikipedia.org/wiki/Dynamic_random-access_memory&quot;&gt;dynamic random-access memory&lt;/a&gt;). Initializing the DRAM is the most complex task the preloader has to do before passing control to LK. To make it work, the preloader must use some kind of calibration data for configuration, and there is so much of this calibration data that it's far easier to extract it from existing firmware than write it from scratch.&lt;/p&gt;
&lt;p&gt;Here's the catch: it is hard to find the calibration data in the compiled firmware blob, as it is unclear where exactly it is stored and which format it has. &lt;a href=&quot;https://github.com/McBitter&quot;&gt;@McBitter&lt;/a&gt; helped himself to an older source code leak of another MediaTek SoC: he found the calibration data in there, but it was not a complete match for his particular SoC. It did, however, serve to clue him in on how the structure looked! Since his success hinged more on luck than anything else, he selected a random pattern (&lt;code&gt;0xAA00AA0&lt;/code&gt;) from the C struct with the calibration data in the source, and searched for it in the binary blob: &quot;After running the search we immediately got a result and it seemed obvious that we've hit the jackpot on this one!&quot;&lt;/p&gt;
&lt;p&gt;You can find the extracted DRAM calibration data &lt;a href=&quot;https://gist.github.com/McBitter/3a90851a6bed1efecdeb03e358a68895&quot;&gt;here&lt;/a&gt;, and the screenshot shows it in a spreadsheet.&lt;/p&gt;
&lt;h1 id=&quot;open-baseband-firmware-for-mt6260&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#open-baseband-firmware-for-mt6260&quot;&gt;Open Baseband Firmware for MT6260&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id=&quot;why-is-proprietary-cellular-firmware-a-problem-again&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#why-is-proprietary-cellular-firmware-a-problem-again&quot;&gt;Why Is Proprietary Cellular Firmware a Problem Again?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Having the main processor of a phone running a secure operating system would already be a great achievement in today's mobile world. We believe that starts with running &lt;a href=&quot;http://www.kroah.com/log/blog/2018/02/05/linux-kernel-release-model/&quot;&gt;official kernel releases&lt;/a&gt; on these devices, instead of unofficial and outdated forks where no one can realistically keep up with security patches.&lt;/p&gt;
&lt;p&gt;However we must not forget about the peripherals inside the device, which run their own firmware. Oftentimes they are able to compromise the whole system, and they are &lt;a href=&quot;https://www.osnews.com/story/27416/The_second_operating_system_hiding_in_every_mobile_phone&quot;&gt;&quot;of dubious quality, poorly understood, entirely proprietary, and wholly insecure by design&quot;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One way to deal with these is implementing kill-switches and sandboxing the cellular modem, an approach currently being planned for in the &lt;a href=&quot;https://puri.sm/shop/librem-5/&quot;&gt;Librem 5&lt;/a&gt; and &lt;a href=&quot;https://neo900.org/&quot;&gt;Neo900&lt;/a&gt;. This allows you to be in control of the device by turning the modems off, despite the fact that you don't know what they are doing while they are on. Another approach is analyzing and binary patching the existing firmware files.&lt;/p&gt;
&lt;p&gt;But let's be honest here, isn't it outrageous that even the projects coming from people who value free and open source software, security and privacy, need to work around this gaping security hole present in nearly every phone ever made? Yes it is a daunting task to truly fix this with an open source implementation and it will take forever. But we have to start somewhere, and letting more time pass by won't help either!&lt;/p&gt;
&lt;h2 id=&quot;porting-osmocombb-to-fernvale&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#porting-osmocombb-to-fernvale&quot;&gt;Porting OsmocomBB to Fernvale&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2018-04/motorola-c138-calypso.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;border&quot; src=&quot;/static/img/2018-04/motorola-c138-calypso-thumb.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
The good news is, there is already a free software implementation of a GSM baseband called &lt;a href=&quot;https://osmocom.org/projects/baseband/wiki&quot;&gt;OsmocomBB&lt;/a&gt;. But it is only compatible with phones based on the TI Calypso chipset, such as the Motorola C138 (photo on the right). Given that the Motorola C138 came out in 2006 and is no longer produced, OsmocomBB's use is limited unless it gets ported to newer platforms.&lt;/p&gt;
&lt;p&gt;In search of an alternative, &lt;a href=&quot;https://github.com/unrznbl&quot;&gt;@unrznbl&lt;/a&gt; chose the Fernvale platform as new target. There's a &lt;a href=&quot;https://media.ccc.de/v/31c3_-_6156_-_en_-_saal_1_-_201412282145_-_fernvale_an_open_hardware_and_software_platform_based_on_the_nominally_closed-source_mt6260_soc_-_bunnie_-_xobs&quot;&gt;nice introduction talk&lt;/a&gt; by its creators that explains how Fernvale was created to enable open source engineers to build phones and other small devices with the cheap MT6260 SoC.
&lt;/div&gt;&lt;/div&gt;
Not only do they hack the hardware, but also provide justifiable concepts to re-implement necessary code from abstracting facts (e.g. DRAM calibration data) found in leaked source core instead of copy and pasting.&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2018-04/fernvale-frond-front.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;border&quot; src=&quot;/static/img/2018-04/fernvale-frond-front-thumb.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
Fernvale consists of three development boards centered around the MT6260 chip, allowing for a much easier way to develop and debug your own software compared to having the chip integrated on a phone. Once custom firmware functions on Fernvale's cellular modem, it will also function on existing phones with the same SoC as well.
&lt;/div&gt;&lt;/div&gt;
Part of the Fernvale project is the first-stage boot environment called &lt;a href=&quot;https://github.com/xobs/fernly/&quot;&gt;Fernly&lt;/a&gt;, as well as a port of the &lt;a href=&quot;https://en.wikipedia.org/wiki/NuttX&quot;&gt;NuttX&lt;/a&gt; real-time operating system.&lt;/p&gt;
&lt;h2 id=&quot;blinking-led&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#blinking-led&quot;&gt;Blinking LED&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/video/2018-04/osmocom-bb-blink.mp4&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;border&quot; src=&quot;/static/img/2018-04/osmocombb-blink.gif&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
&lt;a href=&quot;https://github.com/unrznbl&quot;&gt;@unrznbl&lt;/a&gt;'s first success can be seen on the right: &quot;Fernly already had simple code to &lt;a href=&quot;/static/video/2018-04/fernly-led-on-off.mp4&quot;&gt;turn on and off the LED&lt;/a&gt; on the Fernvale hardware. I reworked the linker scripts and startup assembly code in OsmocomBB to work on Fernvale hardware and was able to make an LED blinking firmware in OsmocomBB!&quot; &lt;em&gt;Click the gif to see the full video, including terminal output.&lt;/em&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Afterwards he continued to replace the functions in the layer one firmware in OsmocomBB with stubs that work on Fernvale to see if he can get more of OsmocomBB running. But he found out that the configuration in his linker script didn't provide enough space for the compiled firmware.&lt;/p&gt;
&lt;p&gt;In order to gain more space, he is looking into using more of Fernvale's software stack: their preloader &lt;a href=&quot;https://github.com/xobs/fernly/blob/master/usb-loader.S&quot;&gt;&lt;code&gt;usb-loader.S&lt;/code&gt;&lt;/a&gt; in combination with &lt;a href=&quot;https://github.com/xobs/fernly/blob/fb11e7f2416d45139ad301ed3e4c58e5e30e7458/fernly-usb-loader.c#L1462&quot;&gt;&lt;code&gt;fernly-usb-loader.c&lt;/code&gt;&lt;/a&gt; should be able to load both Fernly (to initialize the large DRAM) and then OsmocomBB from a connected PC via USB. The workflow is somewhat similar to using &lt;code&gt;fastboot boot&lt;/code&gt; (or &lt;code&gt;pmbootstrap flasher boot&lt;/code&gt;) to run a kernel and initramfs coming from the PC.&lt;/p&gt;
&lt;h2 id=&quot;utopic-vision&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#utopic-vision&quot;&gt;Utopic Vision&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;After the entire layer one firmware of OsmocomBB is ported to Fernvale, it would be possible to do 2G voice calls, send SMS and access the Internet from a laptop via tethering (just like it is possible with old Motorola phones today). &lt;a href=&quot;https://github.com/unrznbl&quot;&gt;@unrznbl&lt;/a&gt; is also involved in creating &lt;a href=&quot;https://osmocom.org/projects/nuttx-bb&quot;&gt;layer one as a library for use in NuttX&lt;/a&gt;, bringing full userspace phone functionality to it. With this, in combination with an oFono or RILD compatible interface added to the code, postmarketOS and friends (yes, even Android based systems like LineageOS), would be able to talk to the cellular modem inside the phone. All without the rather inconvenient Laptop in between.&lt;/p&gt;
&lt;p&gt;This same effort can also benefit the newer MediaTek SoCs, such as the MT6735P (which &lt;a href=&quot;https://github.com/McBitter&quot;&gt;@McBitter&lt;/a&gt; is experimenting with). Ultimately we, and likely lots of free software hackers, are dreaming of libre support for GSM protocols greater than 2G (3G, 4G, LTE and so on).&lt;/p&gt;
&lt;h1 id=&quot;lets-do-something&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#lets-do-something&quot;&gt;Let's Do Something!&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;If you're like us, you don't want to live in a world where everyone is carrying around phones that can be hacked up remotely by anyone with enough money or motivation. Regardless of the OS the phones are running: when we want the people to be in control of their own devices, these must be running FLOSS down to the firmware level. That is the only right way to enable the community to patch security holes after the vendors abandon their software. &lt;a href=&quot;https://meltdownattack.com/&quot;&gt;Every&lt;/a&gt; &lt;a href=&quot;https://www.bleepingcomputer.com/news/security/intel-fixes-critical-bugs-in-management-engine-its-secret-cpu-on-chip/&quot;&gt;complex&lt;/a&gt; &lt;a href=&quot;https://www.krackattacks.com/&quot;&gt;piece&lt;/a&gt; &lt;a href=&quot;https://drownattack.com/&quot;&gt;of&lt;/a&gt;  &lt;a href=&quot;http://heartbleed.com&quot;&gt;software&lt;/a&gt; &lt;a href=&quot;https://dirtycow.ninja/&quot;&gt;has&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/WannaCry_ransomware_attack&quot;&gt;security&lt;/a&gt; &lt;a href=&quot;https://duhkattack.com/&quot;&gt;bugs!&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;how&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#how&quot;&gt;How?&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hack along in #postmarketOS-lowlevel&lt;/strong&gt; if you feel like you're up to it or want to get there (&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Matrix_and_IRC&quot;&gt;IRC/Matrix&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Help out at Osmocom/OsmocomBB&lt;/strong&gt; (&lt;a href=&quot;https://osmocom.org/projects/baseband/wiki/IRC&quot;&gt;IRC&lt;/a&gt;). The latter is the base rock for free software cellular modem firmware, but they are hopelessly underpowered right now. Even if you can't contribute with code, you can ask for other ways to help out!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Contribute to postmarketOS:&lt;/strong&gt; Check out the &lt;a href=&quot;https://postmarketos.org/blog/2017/12/31/219-days-of-postmarketOS/#how-can-you-help&quot;&gt;How Can You Help?&lt;/a&gt; section from the last post.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Raise awareness about problems with proprietary firmware&lt;/strong&gt; (e.g. by sharing this article to fellow hackers).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;thoughts&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#thoughts&quot;&gt;Thoughts?&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=16836503&quot;&gt;Hacker News&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/postmarketOS/duplicates/8c6d33/postmarketos_lowlevel_tiny_steps_towards/&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry xml:base="https://postmarketos.org/blog/feed.atom">
    <title type="text">219 days of postmarketOS</title>
    <id>https://postmarketos.org/blog/2017/12/31/219-days-of-postmarketOS/</id>
    <updated>2017-12-31T00:00:00Z</updated>
    <link href="https://postmarketos.org/blog/2017/12/31/219-days-of-postmarketOS/" />
    <content type="html">&lt;h2 id=&quot;few-years-old-devices-should-not-be-electronic-waste&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#few-years-old-devices-should-not-be-electronic-waste&quot;&gt;Few Years Old Devices Should Not Be Electronic Waste&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Most people around us have accepted that it is necessary to &lt;strong&gt;buy a new phone every other year&lt;/strong&gt;. As a smartphone progresses through its own life cycle, manufacturer support for new features become rare, eventually stopping, and the device gets &lt;strong&gt;&lt;a href=&quot;https://www.geekbench.com/blog/2017/12/iphone-performance-and-battery-age/&quot;&gt;slower and slower&lt;/a&gt;&lt;/strong&gt;. Even worse, after this period, the devices don't get &lt;strong&gt;&lt;a href=&quot;https://threatpost.com/stagefright-2-0-vulnerabilities-affect-1-billion-android-devices/114863/&quot;&gt;security updates&lt;/a&gt;&lt;/strong&gt; anymore. This means that in many cases the bored IT student next door is able to look up on the Internet how to turn your phone into a surveillance device. Unfortunately the only way to continue to receive security updates after this point is to purchase a new device. In lieu of any alternatives today, you really should purchase a new device to stay current with security updates.&lt;/p&gt;
&lt;p&gt;We want to have another option: &lt;strong&gt;postmarketOS&lt;/strong&gt; is a Linux distribution based on (lightning fast) &lt;a href=&quot;https://alpinelinux.org&quot;&gt;Alpine&lt;/a&gt; that aims for a &lt;strong&gt;&lt;a href=&quot;https://postmarketos.org/blog/2017/05/26/intro/&quot;&gt;ten year life-cycle&lt;/a&gt;&lt;/strong&gt;. Instead of having binaries and forked source code for every device, we unify them as much as possible. That allows us to provide updates for all devices at once. The project is still in an &lt;strong&gt;early stage&lt;/strong&gt; (no, you still can't make calls with it.) But it would be a mistake to wait for phone call functionality without informing you about &lt;strong&gt;all the breakthroughs we have had&lt;/strong&gt;. Read on for the exciting changes since day &lt;a href=&quot;https://postmarketos.org/blog/2017/09/03/100-days-of-postmarketos&quot;&gt;one hundred&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id=&quot;weston-got-company&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#weston-got-company&quot;&gt;Weston Got Company&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;plasma-mobile&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#plasma-mobile&quot;&gt;Plasma Mobile&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/video/2017-12/plasma-castor.mp4&quot;&gt;&lt;img alt=&quot;Plasma Mobile running on the sony-castor-windy with freedreno&quot; class=&quot;border&quot; rel=&quot;nofollow&quot; src=&quot;/static/img/2017-12/plasma-castor-thumb.gif&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
The Wayland reference compositor &lt;a href=&quot;https://en.wikipedia.org/wiki/Wayland_(display_server_protocol)#Weston&quot;&gt;Weston&lt;/a&gt; was the first interface we &lt;a href=&quot;https://postmarketos.org/static/img/2017-05-26/i9100-filled.jpg&quot;&gt;had running on our devices&lt;/a&gt;. Good enough for a demo, but to get a &lt;strong&gt;real tablet/smartphone experience&lt;/strong&gt; we always had an eye on KDE's &lt;a href=&quot;https://plasma-mobile.org/&quot;&gt;&lt;strong&gt;Plasma Mobile&lt;/strong&gt;&lt;/a&gt; project. After countless hours of hard work we are proud to finally present it running &lt;strong&gt;on real devices!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Running plasma on real devices with postmarketOS is brand new, which means it has not been tested much and it is &lt;strong&gt;far from a polished experience&lt;/strong&gt;.
&lt;/div&gt;&lt;/div&gt;
With that being said, it looks like it starts on most devices that can already run Weston but devices with hardware acceleration for graphics are much more usable at this point. The Z2 Tablet is one of the two devices booting postmarketOS and supporting hardware acceleration with the open user space driver &lt;a href=&quot;https://github.com/freedreno/freedreno/wiki&quot;&gt;freedreno&lt;/a&gt;. All other devices must use OpenGL emulation in software due to them requiring proprietary GL drivers. We do have various ideas on improving the situation, such as &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Software_OpenGL&quot;&gt;better software rendering&lt;/a&gt; or mainlining the devices and using FLOSS userspace drivers where possible.&lt;/p&gt;
&lt;p&gt;The gif shows Plasma running on the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Sony_Xperia_Z2_Tablet_(sony-castor-windy)&quot;&gt;Sony Xperia Z2 Tablet&lt;/a&gt; (click on it to see the full video). Below we show it on the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Google_Nexus_5_(lg-hammerhead)&quot;&gt;Google Nexus 5&lt;/a&gt;, &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung_Galaxy_S_Advance_(samsung-i9070)&quot;&gt;Samsung Galaxy S Advance&lt;/a&gt;, &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Sony_Xperia_Z1_Compact_(sony-amami)&quot;&gt;Sony Xperia Z1 Compact&lt;/a&gt; and again on the Z2 Tablet, but this time with &lt;a href=&quot;https://github.com/MartijnBraam&quot;&gt;@MartijnBraam&lt;/a&gt;'s postmarketOS wallpaper straight from our new &lt;a href=&quot;https://github.com/postmarketOS/artwork&quot;&gt;artwork&lt;/a&gt; repository.&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-bottom&quot;&gt;
&lt;a href=&quot;/static/img/2017-12/plasma-hammerhead.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/plasma-hammerhead-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2017-12/plasma-i9070.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/plasma-i9070-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2017-12/plasma-amami-3x.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/plasma-amami-3x-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2017-12/plasma-castor2.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/plasma-castor2-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/ata2001&quot;&gt;@ata2001&lt;/a&gt;, &lt;a href=&quot;https://github.com/bhush9&quot;&gt;@bshah&lt;/a&gt;, &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt;, &lt;a href=&quot;https://github.com/MartijnBraam&quot;&gt;@MartijnBraam&lt;/a&gt;, &lt;a href=&quot;https://github.com/NotKit&quot;&gt;@NotKit&lt;/a&gt;, &lt;a href=&quot;https://github.com/PureTryOut&quot;&gt;@PureTryOut&lt;/a&gt;, &lt;a href=&quot;https://github.com/opendata26&quot;&gt;@opendata26&lt;/a&gt;, &lt;a href=&quot;https://github.com/zhuowei&quot;&gt;@zhuowei&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;luneos-ui&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#luneos-ui&quot;&gt;LuneOS UI&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2017-12/luna-qemu.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;border&quot; src=&quot;/static/img/2017-12/luna-qemu-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
Historically &lt;a href=&quot;https://en.wikipedia.org/wiki/LuneOS&quot;&gt;LuneOS&lt;/a&gt; and its interface have their roots in &lt;strong&gt;webOS from late Palm devices&lt;/strong&gt;. It was rewritten from scratch to use modern technologies, such as Wayland. The UI is based on the concept of &lt;em&gt;cards&lt;/em&gt; for various apps, which can be swiped away to close them, and related cards can be grouped to &lt;em&gt;stacks&lt;/em&gt;. That sounds familiar, right?&lt;/p&gt;
&lt;p&gt;Much of the UI and default applications are actually implemented as HTML web applications, thus the name webOS.
&lt;/div&gt;&lt;/div&gt;
During the porting we have learned that it is possible to run &lt;strong&gt;non-HTML applications as well&lt;/strong&gt;, such as Wayland or even &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/629#issuecomment-349463841&quot;&gt;X applications&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/PureTryOut&quot;&gt;@PureTryOut&lt;/a&gt; did the initial packaging while taking a short break from packaging Plasma a while back. Basic applications were packaged, but nothing ran yet. Then &lt;a href=&quot;https://github.com/magmastonealex&quot;&gt;@magmastonealex&lt;/a&gt; picked it up and with a &lt;strong&gt;tremendous amount of work&lt;/strong&gt; he managed to get it going in QEMU. Afterwards &lt;a href=&quot;https://github.com/zhuowei&quot;&gt;@zhuowei&lt;/a&gt; got a proof of concept on his &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Google_Nexus_6P&quot;&gt;Google Nexus 6P&lt;/a&gt; without hardware acceleration by using the &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/629#issuecomment-350810081&quot;&gt;Xzibit-method&lt;/a&gt; of running the LuneOS compositor inside of a running Weston compositor (this same trick &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/987#issuecomment-350856570&quot;&gt;also works with plasma&lt;/a&gt; by the way). &lt;a href=&quot;https://github.com/NotKit&quot;&gt;@NotKit&lt;/a&gt; showed us the real deal with his &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1039&quot;&gt;Motorola Droid 4&lt;/a&gt; followed by &lt;a href=&quot;https://github.com/magmastonealex&quot;&gt;@magmastonealex&lt;/a&gt; &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Teclast_X80_Pro_(teclast-x80pro)&quot;&gt;Teclast X80 Pro&lt;/a&gt; (third and fourth photos below, both have hardware acceleration).&lt;/p&gt;
&lt;p&gt;Since Plasma Mobile and LuneOS share similar technologies, they have similar porting problems - and it's good for development to be able to look at problems from different angles through both UI ports. Before we continue, we should mention that &lt;strong&gt;whole process&lt;/strong&gt; from asking &lt;em&gt;&quot;hey how about packaging LuneOS UI&quot;&lt;/em&gt; to running it within postmarketOS on a device took &lt;strong&gt;less than two months!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-bottom&quot;&gt;
&lt;a href=&quot;/static/img/2017-12/luna-lock.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/luna-lock-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2017-12/luna-firstrun.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/luna-firstrun-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2017-12/luna-droid4.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/luna-droid4-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2017-12/luna-x80pro.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/luna-x80pro-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/magmastonealex&quot;&gt;@magmastonealex&lt;/a&gt;, &lt;a href=&quot;https://github.com/NotKit&quot;&gt;@NotKit&lt;/a&gt;, &lt;a href=&quot;https://github.com/PureTryOut&quot;&gt;@PureTryOut&lt;/a&gt;, &lt;a href=&quot;https://github.com/zhuowei&quot;&gt;@zhuowei&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;hildon-gnome-mate-and-xfce4&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#hildon-gnome-mate-and-xfce4&quot;&gt;Hildon, Gnome, MATE and XFCE4&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2017-12/hildon-i9070.png&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/hildon-i9070-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
You see where we're heading with this: we got all of these environments running on real devices. &lt;a href=&quot;https://postmarketos.org/blog/2017/09/03/100-days-of-postmarketos/#hildon&quot;&gt;&lt;strong&gt;Hildon&lt;/strong&gt;&lt;/a&gt; was &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1015&quot;&gt;updated&lt;/a&gt; by &lt;a href=&quot;https://github.com/NotKit&quot;&gt;@NotKit&lt;/a&gt; to use sources from &lt;a href=&quot;https://maemo-leste.github.io&quot;&gt;Maemo Leste&lt;/a&gt;, which continues development upstream. More applications have been packaged, notably &lt;code&gt;hildon-home&lt;/code&gt; which allows launching apps by touching icons.
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2017-12/mate-i9070.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;fr ml3 mb3 cr&quot; src=&quot;/static/img/2017-12/mate-i9070-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
The other three desktops are already maintained upstream in Alpine, which means we can just install them with little or no modifications. &lt;a href=&quot;https://github.com/opendata26&quot;&gt;@opendata26&lt;/a&gt; made a proof of concept running &lt;strong&gt;Gnome 3&lt;/strong&gt; after applying a few hacks. There is a photo below with Gnome 3 on a Z2 Tablet running Firefox and watching a YouTube video. &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt; is &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1012&quot;&gt;working on&lt;/a&gt; proper integration for &lt;strong&gt;MATE&lt;/strong&gt; as you can see on the right.
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Finally &lt;strong&gt;XFCE4&lt;/strong&gt; was &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/695&quot;&gt;pre-configured&lt;/a&gt; by &lt;a href=&quot;https://github.com/pavelmachek&quot;&gt;@pavelmachek&lt;/a&gt;. In order to make it usable on his &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Nokia_N900_(nokia-rx51)&quot;&gt;Nokia N900&lt;/a&gt;, he also &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/643&quot;&gt;contributed&lt;/a&gt; the &lt;code&gt;unicsy_demo&lt;/code&gt; package, which reads various sensors and is able to send and receive SMS on his device after some manual preparation. &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt; &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1001&quot;&gt;packaged&lt;/a&gt; the &lt;code&gt;matchbox-keyboard&lt;/code&gt; to be used on interfaces lacking their own on screen keyboard. We can happily confirm that XFCE4 and MATE work well even &lt;strong&gt;&lt;em&gt;without&lt;/em&gt; hardware accelerated graphics!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-bottom&quot;&gt;
&lt;a href=&quot;/static/img/2017-12/gnome3-castor.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/gnome3-castor-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2017-12/xfce4-maguro.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/xfce4-maguro-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2017-12/xfce4-hammerhead.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/xfce4-hammerhead-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2017-12/xfce4-i9505.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/xfce4-i9505-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt;, &lt;a href=&quot;https://github.com/NotKit&quot;&gt;@NotKit&lt;/a&gt;, &lt;a href=&quot;https://github.com/opendata26&quot;&gt;@opendata26&lt;/a&gt;, &lt;a href=&quot;https://github.com/pavelmachek&quot;&gt;@pavelmachek&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;libre-drivers-and-libhybris&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#libre-drivers-and-libhybris&quot;&gt;Libre Drivers and Libhybris&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In contrary to most Linux on smartphone projects, almost all these photos and the video are taken off devices which do not run proprietary code on the main CPU. The only exception is the Droid 4, which &lt;a href=&quot;https://github.com/NotKit&quot;&gt;@NotKit&lt;/a&gt; owns. He is &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1002&quot;&gt;actively working&lt;/a&gt; on making proprietary Android drivers usable in postmarketOS with &lt;a href=&quot;https://en.wikipedia.org/wiki/Hybris_(software)&quot;&gt;&lt;strong&gt;libhybris&lt;/strong&gt;&lt;/a&gt;. Libhybris allows devices lacking FLOSS drivers to make full use of their hardware.&lt;/p&gt;
&lt;p&gt;While we don't welcome binary blobs and prefer to sandbox them where we ship them at all, we embrace this solution for people who want it. However we intend to keep &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/756&quot;&gt;closed source components entirely optional&lt;/a&gt;, so you can run pmOS as libre as you want it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/NotKit&quot;&gt;@NotKit&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;mainline-linux-kernel&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#mainline-linux-kernel&quot;&gt;Mainline Linux Kernel&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;android-based-devices&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#android-based-devices&quot;&gt;Android Based Devices&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2017-12/mainline-i9305.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;fr ml3 mb3&quot; src=&quot;/static/img/2017-12/mainline-i9305-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
It's always a super exciting time for &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Matrix_and_IRC&quot;&gt;#postmarketOS&lt;/a&gt; when someone posts the &lt;strong&gt;first photo&lt;/strong&gt; of their smartphone &lt;strong&gt;running on a mainline kernel&lt;/strong&gt;, oftentimes with a distorted screen. Enjoy such pictures of the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Google_Nexus_5_(lg-hammerhead)&quot;&gt;Google Nexus 5&lt;/a&gt; (&lt;a href=&quot;https://github.com/bhush9&quot;&gt;@bshah&lt;/a&gt;) and &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Fairphone-2&quot;&gt;Fairphone 2&lt;/a&gt; (&lt;a href=&quot;https://github.com/z3ntu&quot;&gt;@z3ntu&lt;/a&gt;) below. The &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Sony_Xperia_Z1_Compact_(sony-amami)&quot;&gt;Sony Xperia Z1 Compact&lt;/a&gt; (&lt;a href=&quot;https://github.com/ata2001&quot;&gt;@ata2001&lt;/a&gt;) boots a mainline kernel as well, however the screen does not work yet.&lt;/p&gt;
&lt;p&gt;Together with the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Google_Nexus_7_2013_(asus-flo)&quot;&gt;Google Nexus 7 (2013)&lt;/a&gt;, &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Teclast_X80_Pro_(teclast-x80pro)&quot;&gt;Teclast X80 Pro&lt;/a&gt; and the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Sony_Xperia_Z2_Tablet_(sony-castor-windy)&quot;&gt;Xperia Z2 Tablet&lt;/a&gt; &amp;mdash; where &lt;a href=&quot;https://github.com/opendata26&quot;&gt;@opendata26&lt;/a&gt; fixed a mmc regression introduced with newer kernels &amp;mdash; we now have &lt;strong&gt;six Android-based devices packaged with partial mainline support&lt;/strong&gt;. We are still at the beginning of unifying them into one &lt;code&gt;linux-postmarketos-stable&lt;/code&gt; package, but it's a huge step in the right direction!
&lt;/div&gt;&lt;/div&gt;
While this blog post was in the making, &lt;a href=&quot;https://github.com/fourkbomb&quot;&gt;@fourkbomb&lt;/a&gt; showed us &lt;strong&gt;even more mainlining progress&lt;/strong&gt;. This work is &lt;em&gt;not&lt;/em&gt; packaged for postmarketOS yet, and he used &lt;strong&gt;&lt;a href=&quot;https://forkwhiletrue.me/posts/kexec-on-galaxy-s3/&quot;&gt;&lt;code&gt;kexec&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; to boot from the original kernel forks to the mainline kernel. Nevertheless, the results are impressive! On the right is the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung_Galaxy_SIII_LTE_(samsung-i9305)&quot;&gt;Samsung Galaxy SIII LTE&lt;/a&gt; (&lt;code&gt;i9305&lt;/code&gt;) running mainline (as you can see in the terminal when clicking on it). As if that wasn't cool enough he made it work on similar Samsungs (&lt;a href=&quot;/static/img/2017-12/mainline-i9300.jpg&quot;&gt;&lt;code&gt;i9300&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;/static/img/2017-12/mainline-n7100.jpg&quot;&gt;&lt;code&gt;n7100&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;/static/img/2017-12/mainline-n7105.jpg&quot;&gt;&lt;code&gt;n7105&lt;/code&gt;&lt;/a&gt;) as well!&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-bottom&quot;&gt;
&lt;a href=&quot;/static/img/2017-12/mainline-hammerhead.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/mainline-hammerhead-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2017-12/mainline-fp2.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/mainline-fp2-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/ata2001&quot;&gt;@ata2001&lt;/a&gt;, &lt;a href=&quot;https://github.com/bhush9&quot;&gt;@bshah&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fourkbomb&quot;&gt;@fourkbomb&lt;/a&gt;, &lt;a href=&quot;https://github.com/magmastonealex&quot;&gt;@magmastonealex&lt;/a&gt;, &lt;a href=&quot;https://github.com/montvid&quot;&gt;@montvid&lt;/a&gt;, &lt;a href=&quot;https://github.com/opendata26&quot;&gt;@opendata26&lt;/a&gt;, &lt;a href=&quot;https://github.com/z3ntu&quot;&gt;@z3ntu&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;nokia-n9xx-devices&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#nokia-n9xx-devices&quot;&gt;Nokia N9xx Devices&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=fH6zuK2OOVU&quot;&gt;Camera support&lt;/a&gt; for the &lt;strong&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Nokia_N900_(nokia-rx51)&quot;&gt;N900&lt;/a&gt;&lt;/strong&gt; was merged by &lt;a href=&quot;https://github.com/pavelmachek&quot;&gt;@pavelmachek&lt;/a&gt;. There's still a lot of work to do in kernel and user space, but the classic N900's hardware support is getting better. The only major areas not supported are Bluetooth and 3D acceleration.&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2017-12/mainline-rm-969.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;border&quot; src=&quot;/static/img/2017-12/mainline-rm-969-thumb.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
&lt;strong&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Nokia_N9&quot;&gt;Nokia N9&lt;/a&gt;&lt;/strong&gt; packaging for postmarketOS with the mainline kernel is &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/1046&quot;&gt;ongoing&lt;/a&gt; now that &lt;a href=&quot;https://github.com/filippz&quot;&gt;@filippz&lt;/a&gt; &lt;a href=&quot;https://mobile.twitter.com/fi1ippz/status/945692340194349056&quot;&gt;made it work&lt;/a&gt; (photo on the right shows the N9 during &lt;a href=&quot;https://mobile.twitter.com/fi1ippz/status/927581300197863427&quot;&gt;earlier porting stages&lt;/a&gt;). &lt;a href=&quot;https://github.com/sre&quot;&gt;@sre&lt;/a&gt; has done a lot of work on display support for TI OMAP, and this work is slowly being merged into the mainline kernel. Support for battery status on N9 and &lt;a href=&quot;https://en.wikipedia.org/wiki/N950&quot;&gt;N950&lt;/a&gt; should be ready in kernel v4.15. In addition, light sensor drivers are now working. While this is amazing progress, a lot more work still needs to be done for these devices. For instance battery charging, a staple feature for smartphones, is currently not working yet.
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/filippz&quot;&gt;@filippz&lt;/a&gt;, &lt;a href=&quot;https://github.com/pavelmachek&quot;&gt;@pavelmachek&lt;/a&gt;, &lt;a href=&quot;https://github.com/sre&quot;&gt;@sre&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;new-devices&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#new-devices&quot;&gt;New Devices&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Despite not being a smartphone or tablet, this next device is still right at home in this section: &lt;a href=&quot;https://github.com/dee-gomma&quot;&gt;@dee-gomma&lt;/a&gt; managed to run and demonstrate basic functionality of &lt;code&gt;pmbootstrap&lt;/code&gt; on a 32 bit &quot;postmarket PC&quot;, check out &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/933&quot;&gt;his instructions&lt;/a&gt; if you still own such an old computer and feel adventurous.&lt;/p&gt;
&lt;p&gt;But what you are really looking for are the new supported devices running postmarketOS, right? Most people expect a certain level of functionality on &lt;em&gt;supported&lt;/em&gt; devices, and almost all expect that a supported device can be used as daily driver. As a result, this section has historically started off with a disclaimer that our definition of &quot;supported&quot; essentially means that the devices will successfully boot postmarketOS. This time, however, we have decided to &lt;a href=&quot;https://github.com/postmarketOS/wiki/issues/12&quot;&gt;abandon the term &quot;supported&quot; altogether&lt;/a&gt; in order to help minimize confusion. Here are &lt;strong&gt;twenty-five new devices&lt;/strong&gt;, on which &lt;strong&gt;postmarketOS boots&lt;/strong&gt;. Click on them for detailed information about what works and what does not.&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2017-12/new-s6500d.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/new-s6500d-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Amazon_Kindle_Fire_HDX&quot;&gt;Amazon Kindle Fire HDX &lt;code&gt;(amazon-thor)&lt;/code&gt;&lt;/a&gt; &lt;em&gt;(first below)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Fairphone_2_(fairphone-fp2)&quot;&gt;Fairphone 2 &lt;code&gt;(fairphone-fp2)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Google_Glass_(Explorer_Edition)&quot;&gt;Google Glass (Explorer Edition) &lt;code&gt;(google-glass)&lt;/code&gt;&lt;/a&gt; &lt;em&gt;(second below, &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/957#issuecomment-348735547&quot;&gt;more pictures&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Google_Nexus_6P&quot;&gt;Google Nexus 6P &lt;code&gt;(huawei-angler)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Google_Nexus_7_2013_(asus-flo)&quot;&gt;Google Nexus 7 (2013) &lt;code&gt;(asus-flo)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Huawei-Ascend-Y530&quot;&gt;Huawei Ascend Y530 &lt;code&gt;(huawei-y530)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Lenovo_K6_Power_(lenovo-karate)&quot;&gt;Lenovo K6 Power &lt;code&gt;(lenovo-karate)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/LG_G_Watch_(lg-dory)&quot;&gt;LG G Watch &lt;code&gt;(lg-dory)&lt;/code&gt;&lt;/a&gt; &lt;em&gt;(third below)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/LG_G4_International_(lg-h815)&quot;&gt;LG G4 International &lt;code&gt;(lg-h815)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/LG_L65_Dual_SIM_D285_(lg-d285)&quot;&gt;LG L65 Dual SIM D285 &lt;code&gt;(lg-d285)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Moto_G_2015_(motorola-osprey)&quot;&gt;Moto G 2015 &lt;code&gt;(motorola-osprey)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/OnePlus_One_(oneplus-bacon)&quot;&gt;OnePlus One &lt;code&gt;(oneplus-bacon)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/OnePlus_X_(oneplus-onyx)&quot;&gt;OnePlus X &lt;code&gt;(oneplus-onyx)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Ouya_(ouya-ouya)&quot;&gt;Ouya &lt;code&gt;(ouya-ouya)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung_Galaxy_Mini_2_(samsung-s6500d)&quot;&gt;Samsung Galaxy Mini 2 &lt;code&gt;(samsung-s6500d)&lt;/code&gt;&lt;/a&gt; &lt;em&gt;(on the right)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung-i747m&quot;&gt;Samsung Galaxy SIII (i747m) &lt;code&gt;(samsung-i747m)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung_Galaxy_SIII_LTE_(samsung-i9305)&quot;&gt;Samsung Galaxy SIII (LTE) &lt;code&gt;(samsung-i9305)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung-i9505-(Samsung-Galaxy-S4-int)&quot;&gt;Samsung Galaxy S4 (International) &lt;code&gt;(samsung-i9505)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung_Galaxy_SL_(samsung-i9003)&quot;&gt;Samsung Galaxy SL &lt;code&gt;(samsung-i9003)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Samsung_Galaxy_Tab_2_10.1%22_(3G_and_Wifi)_(samsung-espresso10)&quot;&gt;Samsung Galaxy Tab 2 10.1&quot; &lt;code&gt;(samsung-espresso10)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Sony_Xperia_Z1_(sony-honami)&quot;&gt;Sony Xperia Z1 &lt;code&gt;(sony-honami)&lt;/code&gt;&lt;/a&gt; &lt;em&gt;(fourth below)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Sony_Xperia_Z3C_(sony-aries)&quot;&gt;Sony Xperia Z3 Compact &lt;code&gt;(sony-aries)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Teclast_X80_Pro_(teclast-x80pro)&quot;&gt;Teclast X80 Pro &lt;code&gt;(teclast-x80pro)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Wiko_Lenny_3_(wiko-lenny3)&quot;&gt;Wiko Lenny 3 &lt;code&gt;(wiko-lenny3)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Xiaomi_RedMi3_(xiaomi-ido)&quot;&gt;Xiaomi RedMi3 &lt;code&gt;(xiaomi-ido)&lt;/code&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The best way to get an overview of all devices at once is the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Devices&quot;&gt;devices&lt;/a&gt; page on the wiki. As of today, for example, it shows that we have &lt;strong&gt;18 devices with working &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Wifi&quot;&gt;Wi-Fi&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-bottom&quot;&gt;
&lt;a href=&quot;/static/img/2017-12/new-thor.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/new-thor-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2017-12/new-glass.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/new-glass-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2017-12/new-dory.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/new-dory-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2017-12/new-honami.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/new-honami-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/ata2001&quot;&gt;@ata2001&lt;/a&gt; &lt;a href=&quot;https://github.com/dakk&quot;&gt;@dakk&lt;/a&gt; &lt;a href=&quot;https://github.com/dee-gomma&quot;&gt;@dee-gomma&lt;/a&gt; &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt; &lt;a href=&quot;https://github.com/flacks&quot;&gt;@flacks&lt;/a&gt; &lt;a href=&quot;https://github.com/Halamix2&quot;&gt;@Halamix2&lt;/a&gt; &lt;a href=&quot;https://github.com/kaendfinger&quot;&gt;@kaendfinger&lt;/a&gt; &lt;a href=&quot;https://github.com/kamnxt&quot;&gt;@kamnxt&lt;/a&gt; &lt;a href=&quot;https://github.com/kskarthik&quot;&gt;@kskarthik&lt;/a&gt; &lt;a href=&quot;https://github.com/lawl&quot;&gt;@lawl&lt;/a&gt; &lt;a href=&quot;https://github.com/limiter121&quot;&gt;@limiter121&lt;/a&gt; &lt;a href=&quot;https://github.com/magmastonealex&quot;&gt;@magmastonealex&lt;/a&gt; &lt;a href=&quot;https://github.com/montvid&quot;&gt;@montvid&lt;/a&gt; &lt;a href=&quot;https://github.com/MoreRobustThanYou&quot;&gt;@MoreRobustThanYou&lt;/a&gt; &lt;a href=&quot;https://github.com/rendeko&quot;&gt;@rendeko&lt;/a&gt; &lt;a href=&quot;https://github.com/rrooij&quot;&gt;@rrooij&lt;/a&gt; &lt;a href=&quot;https://github.com/shwsh&quot;&gt;@shwsh&lt;/a&gt; &lt;a href=&quot;https://github.com/tyxieblub&quot;&gt;@tyxieblub&lt;/a&gt; &lt;a href=&quot;https://github.com/WilliamO7&quot;&gt;@WilliamO7&lt;/a&gt; &lt;a href=&quot;https://github.com/z3ntu&quot;&gt;@z3ntu&lt;/a&gt; &lt;a href=&quot;https://github.com/zhenyolka&quot;&gt;@zhenyolka&lt;/a&gt; &lt;a href=&quot;https://github.com/zhuowei&quot;&gt;@zhuowei&lt;/a&gt; and everyone who helped them out!&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;all-new-pmbootstrap-init&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#all-new-pmbootstrap-init&quot;&gt;All New 'pmbootstrap init'&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When you get started with postmarketOS development, the first thing you do is clone the &lt;strong&gt;&lt;code&gt;pmbootstrap&lt;/code&gt;&lt;/strong&gt; git repository. This provides you with a small Python script that runs on just about &lt;strong&gt;every Linux distribution&lt;/strong&gt; because of Python's portability and the script's single dependency on &lt;code&gt;openssl&lt;/code&gt;. With it, you will have a great deal of &lt;strong&gt;tasks automated and streamlined&lt;/strong&gt;, so you can &lt;strong&gt;focus on actual development&lt;/strong&gt; instead of spending hours on setting up your development environment.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git clone https://github.com/postmarketOS/pmbootstrap
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; pmbootstrap
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ./pmbootstrap.py init
&lt;span class=&quot;go&quot;&gt;Target device (either an existing one, or a new one for porting).&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Available (39): amazon-thor, asus-flo, asus-grouper, ...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Device [samsung-i9100]: &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;init&lt;/code&gt; action is what you run directly after cloning the source and whenever you want to change your configuration. Besides the devices we already have, it is also possible to type in a &lt;strong&gt;new device name&lt;/strong&gt; now. In the &quot;new device name&quot; mode the script is eager to learn about your new device: &lt;em&gt;Who produced the device? Does it have an SD card slot or a hardware keyboard? Which CPU architecture and bootloader does it have? Oh fastboot you say - why don't you give me an existing &lt;strong&gt;&lt;code&gt;boot.img&lt;/code&gt;&lt;/strong&gt; file from a known working Android ROM while we're at it, so we can &lt;strong&gt;extract the flashing offsets&lt;/strong&gt;?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Once this information is gathered, it presents you with an &lt;strong&gt;automatically generated kernel-package and &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Device_specific_package&quot;&gt;device-package&lt;/a&gt;&lt;/strong&gt;. We get new devices running with their original kernel first, before we try to run the mainline kernel on them. Besides that, new questions were added for the interface: timezone (e.g. &lt;em&gt;Your host timezone is Europe/London, use that?&lt;/em&gt;), username and &lt;strong&gt;custom default packages&lt;/strong&gt; (e.g. &lt;em&gt;how about &lt;code&gt;vim&lt;/code&gt;, &lt;code&gt;gdb&lt;/code&gt;, &lt;code&gt;strace&lt;/code&gt;?&lt;/em&gt;). Build options rarely need to be changed, so they were grouped together to make it easy to skip them.&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Porting_to_a_new_device&quot;&gt;&lt;img alt=&quot;https://wiki.postmarketos.org/wiki/Porting_to_a_new_device&quot; class=&quot;w200 border&quot; src=&quot;/static/img/2017-12/porting-guide-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
After &lt;code&gt;init&lt;/code&gt; is through, you are just &lt;strong&gt;one command away from cross-compiling&lt;/strong&gt; packages or building a &lt;strong&gt;full installation image&lt;/strong&gt;. We have whole new &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Porting_to_a_new_device&quot;&gt;porting&lt;/a&gt; and &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Installation_guide&quot;&gt;installation&lt;/a&gt; guides that walk you through the process step by step.
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/craftyguy&quot;&gt;@craftyguy&lt;/a&gt;, &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt;, &lt;a href=&quot;https://github.com/ollieparanoid&quot;&gt;@ollieparanoid&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;binary-repository&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#binary-repository&quot;&gt;Binary Repository&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In order to change something in &lt;strong&gt;&lt;em&gt;Android's&lt;/em&gt; system code&lt;/strong&gt;, you need to &lt;strong&gt;download its entire source&lt;/strong&gt; code of 100 GB, then do your change and &lt;strong&gt;build everything&lt;/strong&gt;, which takes another 150 GB of storage, as well as 16 GB of RAM (or SWAP) and &lt;strong&gt;lots of time&lt;/strong&gt; even on the strongest computers (numbers from &lt;a href=&quot;https://source.android.com/setup/requirements&quot;&gt;here&lt;/a&gt;, 2017-12). Subsequent builds are faster, but still you have this initial build which seemingly takes forever.&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;https://github.com/postmarketOS/artwork/commit/805d8762426e69c2b1761e9bb2b0993509043c24&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/logo-render.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
postmarketOS doesn't use Android's build system, but divides all of its software in &lt;strong&gt;packages&lt;/strong&gt; just like a regular Linux distribution. As mentioned previously we directly use Alpine's repository for many packages in postmarketOS - but today we also have a binary repository for our own packages (with interfaces like Plasma Mobile, kernel packages, etc)! While it still has a few &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/970&quot;&gt;rough edges&lt;/a&gt; it gets the job done: Now you &lt;strong&gt;only need to compile the packages that you want to change&lt;/strong&gt;. Even if your computer takes hours just to build the Linux kernel it is still feasible to use it for postmarketOS development. All compiler output is cached with &lt;a href=&quot;https://en.wikipedia.org/wiki/Ccache&quot;&gt;ccache&lt;/a&gt;, so subsequent builds are a lot faster as well.&lt;/p&gt;
&lt;p&gt;This also means that it is possible to update your postmarketOS installation running on your device now.
&lt;/div&gt;&lt;/div&gt;
Keep in mind that we have not reached the point yet where we can verify each update on the device migrates properly from the previous version, so you will probably have some breakage sooner or later. Kernel updates should work as well, thanks to the &lt;strong&gt;kernel update script&lt;/strong&gt; &lt;a href=&quot;https://github.com/ata2001&quot;&gt;@ata2001&lt;/a&gt; wrote - but right now you will need to invoke it manually.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/ata2001&quot;&gt;@ata2001&lt;/a&gt;,  &lt;a href=&quot;https://github.com/ollieparanoid&quot;&gt;@ollieparanoid&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;continuous-integration&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#continuous-integration&quot;&gt;Continuous Integration&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;pmbootstrap&lt;/code&gt; has had test cases since the day it was released. We hooked &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/760&quot;&gt;Travis&lt;/a&gt; and &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/761&quot;&gt;Coveralls&lt;/a&gt; up with that testsuite to automatically run it for each new pull request. And we steadily increased the coverage from &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/820#issuecomment-339057618&quot;&gt;51%&lt;/a&gt; to &lt;a href=&quot;https://coveralls.io/builds/14788770&quot;&gt;64%&lt;/a&gt;. The &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/blob/917f03d5f9f015fa9fc0be8093d87b7f21d98d4a/test/static_code_analysis.sh#L24-L48&quot;&gt;list of shell scripts&lt;/a&gt; we automatically verify with &lt;a href=&quot;https://shellcheck.net/&quot;&gt;shellcheck&lt;/a&gt; has grown again.&lt;/p&gt;
&lt;p&gt;As we learned about &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Kernel_configuration&quot;&gt;kernel config options&lt;/a&gt; that should or should not be enabled to work properly with Linux on smartphones, we created the &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/589&quot;&gt;&lt;code&gt;pmbootstrap kconfig_check&lt;/code&gt;&lt;/a&gt; action to automatically check the configs. This runs whenever you change the kernel config with &lt;code&gt;pmbootstrap menuconfig&lt;/code&gt;, and it runs on Travis as well.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/ata2001&quot;&gt;@ata2001&lt;/a&gt;, &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt;, &lt;a href=&quot;https://github.com/MartijnBraam&quot;&gt;@MartijnBraam&lt;/a&gt;, &lt;a href=&quot;https://github.com/ollieparanoid&quot;&gt;@ollieparanoid&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;other-new-features&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#other-new-features&quot;&gt;Other New Features&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Running postmarketOS in a &lt;strong&gt;QEMU VM&lt;/strong&gt;, with &lt;code&gt;pmbootstrap qemu&lt;/code&gt;, will now use &lt;strong&gt;3D acceleration&lt;/strong&gt; by default. In addition, QEMU image files can now be &lt;strong&gt;resized on the fly&lt;/strong&gt; by using the new &lt;code&gt;--image-size&lt;/code&gt; parameter. These changes continue to make QEMU an invaluable resource for developers packaging and testing new software in the postmarketOS/Alpine Linux environment.&lt;/p&gt;
&lt;p&gt;Regarding encryption, it is possible to use &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/585&quot;&gt;&lt;strong&gt;encrypted swap files&lt;/strong&gt;&lt;/a&gt; now. Furthermore the &lt;strong&gt;touch screen keyboard for full disk encryption&lt;/strong&gt; (&lt;a href=&quot;https://github.com/postmarketOS/osk-sdl&quot;&gt;osk-sdl&lt;/a&gt;) we &lt;a href=&quot;https://postmarketos.org/blog/2017/09/03/100-days-of-postmarketos/#initramfs-is-full-of-new-features&quot;&gt;introduced last time&lt;/a&gt; became the &lt;a href=&quot;https://www.reddit.com/r/postmarketOS/comments/76flrr/fde_unlocking_with_osksdl_has_been_merged/&quot;&gt;default&lt;/a&gt; now, and has helped to make full disk encryption a great deal more practical. You just don't need to fire up a &lt;a href=&quot;https://ollieparanoid.github.io/img/2017-05-26/i9100/telnet.jpg&quot;&gt;USB telnet session&lt;/a&gt; anymore to unlock your phone each time you reboot it. But for initramfs debug, you can still install a hook that gives you a &lt;strong&gt;debug shell&lt;/strong&gt; - and it displays a nice splash screen until you tell it to continue booting.&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-bottom&quot;&gt;
&lt;a href=&quot;/static/img/2017-12/debug-shell-i9070.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;/static/img/2017-12/debug-shell-i9070-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/BrianOtto&quot;&gt;@BrianOtto&lt;/a&gt;, &lt;a href=&quot;https://github.com/craftyguy&quot;&gt;@craftyguy&lt;/a&gt;, &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;various-refactoring&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#various-refactoring&quot;&gt;Various Refactoring&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt; made it possible to share code between the device specific package recipes with &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/995&quot;&gt;&lt;code&gt;devicepkg-dev&lt;/code&gt;&lt;/a&gt;. The package building code in &lt;code&gt;pmbootstrap&lt;/code&gt; &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/935&quot;&gt;was rewritten&lt;/a&gt; by &lt;a href=&quot;https://github.com/ollieparanoid&quot;&gt;@ollieparanoid&lt;/a&gt; to make it easier to extend and to do build-time dependency installation just like Alpine's &lt;code&gt;abuild&lt;/code&gt; for improved compatibility.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ata2001&quot;&gt;@ata2001&lt;/a&gt; &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/901&quot;&gt;refactored&lt;/a&gt; the &lt;strong&gt;Android recovery zip&lt;/strong&gt; installer to have close to zero dependencies on the recovery system used, which makes it possible to work not only in (exotic versions of) TWRP, but also in CWM and probably every other Android recovery system. He also &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/609&quot;&gt;extended it&lt;/a&gt; to support devices that need the &lt;code&gt;heimdall-isorec&lt;/code&gt; flash method.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/ata2001&quot;&gt;@ata2001&lt;/a&gt;, &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt;, &lt;a href=&quot;https://github.com/ollieparanoid&quot;&gt;@ollieparanoid&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;raw-numbers&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#raw-numbers&quot;&gt;Raw Numbers&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;275 people in the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Matrix_and_IRC&quot;&gt;channel&lt;/a&gt; (+175)&lt;/li&gt;
&lt;li&gt;1367 &lt;a href=&quot;https://www.reddit.com/r/postmarketOS/&quot;&gt;/r/postmarketOS&lt;/a&gt; readers (+762)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap&quot;&gt;pmbootstrap&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;763 stargazers &lt;em&gt;(+208)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;567 closed PRs &lt;em&gt;(+344)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;336 closed issues &lt;em&gt;(+151)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;134 open issues &lt;em&gt;(+59)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;102 forks &lt;em&gt;(+54)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;74 watchers &lt;em&gt;(+25)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;57 contributors (&lt;code&gt;git shortlog --summary --numbered | wc -l&lt;/code&gt;) &lt;em&gt;(+30)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;environment&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#environment&quot;&gt;Environment&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We would like to thank all projects that collaborate with us, and talk about some of their news which is relevant for us as well.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alpine Linux 3.7&lt;/strong&gt; &lt;a href=&quot;https://alpinelinux.org/posts/Alpine-3.7.0-released.html&quot;&gt;was released&lt;/a&gt; with thousands of git commits of hard work. While postmarketOS is still based on their rolling release &lt;code&gt;edge&lt;/code&gt; branch, the idea is that we also base our work on the stable channels at some point in the future. &lt;a href=&quot;https://github.com/awilfox&quot;&gt;@awilfox&lt;/a&gt; from the upcoming &lt;a href=&quot;https://adelielinux.org/&quot;&gt;Adélie Linux&lt;/a&gt; assured that they will be &lt;strong&gt;upstreaming and maintaining the LTS version of KDE Plasma&lt;/strong&gt; in Alpine. As soon as it's upstreamed we can base our Plasma Mobile packaging directly on the KDE Framework in Alpine, and when Plasma Mobile works with the LTS version of the Plasma Framework at some point in the future we can &lt;strong&gt;build on top of that&lt;/strong&gt; as well! Several contributors to postmarketOS have also directly contributed to the Alpine Linux 3.7 release and, while not nearly as impactful as the official Alpine Linux developers, we are still very much committed to helping out our Alpine friends where ever we can!&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Plasma Mobile&lt;/strong&gt; team recently detailed their &lt;a href=&quot;https://vizzzion.org/blog/2017/10/plasma-mobile-roadmap/&quot;&gt;roadmap&lt;/a&gt; in a recent blog post. And they got a lot of interest with the successfully funded &lt;strong&gt;&lt;a href=&quot;https://puri.sm/shop/librem-5/&quot;&gt;Librem 5 phone&lt;/a&gt;&lt;/strong&gt;, which will either use &lt;a href=&quot;https://www.kde.org/announcements/kde-purism-librem5.php&quot;&gt;Plasma&lt;/a&gt; or &lt;a href=&quot;https://www.gnome.org/news/2017/09/gnome-foundation-partners-with-purism-to-support-its-efforts-to-build-the-librem-5-smartphone/&quot;&gt;Gnome 3&lt;/a&gt;. We think the &lt;a href=&quot;https://postmarketos.org/blog/2017/09/24/librem-5/&quot;&gt;Librem 5 is great for all Linux smartphone projects&lt;/a&gt; out there.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://matrix.org/blog/2017/09/28/experiments-with-matrix-on-the-purism-librem5-starring-ubports-and-nheko/&quot;&gt;somewhat mobile friendly&lt;/a&gt; matrix client &lt;strong&gt;&lt;a href=&quot;https://github.com/mujx/nheko&quot;&gt;nheko&lt;/a&gt;&lt;/strong&gt; just had its &lt;a href=&quot;https://github.com/mujx/nheko/releases/tag/v0.1.0&quot;&gt;0.1.0 release&lt;/a&gt;, and while we have &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/900&quot;&gt;not finished packaging&lt;/a&gt; it yet, author &lt;a href=&quot;https://github.com/mujx&quot;&gt;@mujx&lt;/a&gt; confirmed that he had an earlier version working on postmarketOS in QEMU.&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;https://github.com/kergoth/tslib/issues/89#issuecomment-343443468&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;fr ml3 mb3&quot; src=&quot;/static/img/2017-12/logo-tslib-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
&lt;strong&gt;&lt;a href=&quot;http://www.tslib.org/&quot;&gt;tslib&lt;/a&gt;&lt;/strong&gt; powers the touch screen functionality in our initramfs. Shout out to &lt;a href=&quot;https://github.com/merge&quot;&gt;@merge&lt;/a&gt; from the project, who was incredibly helpful with &lt;a href=&quot;https://github.com/kergoth/tslib/issues/103&quot;&gt;answering questions&lt;/a&gt;, &lt;strong&gt;&lt;a href=&quot;https://github.com/kergoth/tslib/issues/104&quot;&gt;making it work on Android devices&lt;/a&gt;&lt;/strong&gt; and by patching tslib, the touch driver for the N900 in &lt;a href=&quot;https://github.com/kergoth/tslib/issues/108#issuecomment-342887195&quot;&gt;the kernel&lt;/a&gt;, and even implementing &lt;a href=&quot;https://github.com/kergoth/tslib/issues/108&quot;&gt;automatic touch screen detection&lt;/a&gt;! To show our appreciation we solicited help for responding to a tslib request for a &lt;a href=&quot;https://github.com/kergoth/tslib/issues/89&quot;&gt;vectorized logo&lt;/a&gt; in #postmarketOS, and only a day later &lt;a href=&quot;https://github.com/rrcha&quot;&gt;@rrcha&lt;/a&gt; took care of it.
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If you're into smartwatches and want to use an open source OS on them today, check out &lt;strong&gt;&lt;a href=&quot;https://asteroidos.org/&quot;&gt;AsteroidOS&lt;/a&gt;&lt;/strong&gt;. &lt;a href=&quot;https://github.com/FlorentRevest&quot;&gt;@FlorianRevest&lt;/a&gt; &lt;a href=&quot;https://github.com/AsteroidOS/msm-fb-refresher/issues/1&quot;&gt;tagged a version&lt;/a&gt; of its &lt;code&gt;msm-fb-refresher&lt;/code&gt; component, so were able to package it properly to &lt;strong&gt;refresh the framebuffer&lt;/strong&gt; in postmarketOS for devices that need it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to everyone working on these projects!&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;how-can-you-help&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#how-can-you-help&quot;&gt;How Can You Help?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You read through the entire thing, didn't you? Looks like you have some interest in this project - and &lt;strong&gt;we can use every helping hand.&lt;/strong&gt; We've put the more technical tasks at the bottom of each list. &lt;code&gt;pmbootstrap&lt;/code&gt; is written in Python, packaging tasks require shell scripting knowledge. &lt;/p&gt;
&lt;p&gt;Tasks that &lt;strong&gt;do not require&lt;/strong&gt; a device running postmarketOS:&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2017-12/logo-shirt.jpg&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;w200 border&quot; src=&quot;/static/img/2017-12/logo-shirt-thumb.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.postmarketos.org/&quot;&gt;Improve documentation&lt;/a&gt; (e.g. &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Potential_apps&quot;&gt;potential apps&lt;/a&gt;, &lt;a href=&quot;https://wiki.postmarketos.org/wiki/The_Mainline_Kernel&quot;&gt;mainlining&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Donate&quot;&gt;Donate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/postmarketOS/artwork/pull/9&quot;&gt;Print yourself a postmarketOS fair trade t-shirt and wear it!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pulls&quot;&gt;Test pull requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pulls&quot;&gt;Review pull requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues&quot;&gt;Resolve open issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Package and maintain apps (e.g. &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/900&quot;&gt;nheko&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Improve or package &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/62&quot;&gt;your favorite user interface&lt;/a&gt; (e.g. Asteroid OS, feature phone, Gnome, Hildon, Lune OS, MATE, Plasma, Ubuntu Touch, Weston, XFCE4)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/postmarketOS/comments/6xuo1s/will_postmarketos_support_anbox/&quot;&gt;Package &lt;code&gt;anbox&lt;/code&gt; to run Android apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/592&quot;&gt;Package nexmon&lt;/a&gt;, so we can patch &lt;a href=&quot;https://ollieparanoid.github.io/post/security-warning/&quot;&gt;security holes&lt;/a&gt; in abandoned Wifi firmware&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Software_OpenGL&quot;&gt;Improve Software OpenGL rendering&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tasks that &lt;strong&gt;do require&lt;/strong&gt; a mobile device for development:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Porting_to_a_new_device&quot;&gt;Port your phone&lt;/a&gt; (or &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Installation_guide&quot;&gt;install pmOS&lt;/a&gt; on it if there's already a port)&lt;/li&gt;
&lt;li&gt;Make &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Making_good_photos&quot;&gt;good photos/videos&lt;/a&gt; of devices running pmOS for the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Special:ListFiles&quot;&gt;wiki&lt;/a&gt; and &lt;a href=&quot;https://www.reddit.com/r/postmarketOS/&quot;&gt;/r/postmarketOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pulls&quot;&gt;Test pull requests on devices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/598&quot;&gt;Get cellular modems working&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/postmarketOS/charging-sdl&quot;&gt;Work on the charging UI&lt;/a&gt; for the initramfs (C, started by &lt;a href=&quot;https://github.com/IanS5&quot;&gt;@IanS5&lt;/a&gt; and &lt;a href=&quot;pavelmachek&quot;&gt;@pavelmachek&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Help out &lt;a href=&quot;https://github.com/McBitter&quot;&gt;@McBitter&lt;/a&gt; with &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Mediatek&quot;&gt;Mediatek bootloader reverse engineering&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;closing-words&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#closing-words&quot;&gt;Closing Words&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;What a crazy half year of development we have behind us. Who would have thought that this project would have taken off &lt;em&gt;this much&lt;/em&gt;? That such a big community would have emerged out of nowhere? This is the &lt;strong&gt;work of every single contributor&lt;/strong&gt;, we can all be proud of what we have achieved and we have &lt;em&gt;lots&lt;/em&gt; of potential for the future. Thanks for reading, and now &lt;strong&gt;go party hard on new years eve!&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;bonus-install_if&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#bonus-install_if&quot;&gt;Bonus: &lt;code&gt;install_if&lt;/code&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;No fancy pictures here, just a little code snippet and possibly boring implementation details. We've moved this one to the bottom because the post has gotten really long again.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In some cases, &lt;strong&gt;device specific config files&lt;/strong&gt; are needed &lt;strong&gt;for programs&lt;/strong&gt;, such as X11 or Weston. Now we could always bundle these configs with the device package, regardless of the program in question being installed or not. But then again we would &lt;strong&gt;clutter up the filesystem&lt;/strong&gt; with useless files, which isn't nice. Thankfully Alpine developer &lt;a href=&quot;https://github.com/kaniini&quot;&gt;@kaniini&lt;/a&gt; &lt;a href=&quot;https://github.com/postmarketOS/pmbootsatrap/issues/499#issuecomment-329600202&quot;&gt;pointed us&lt;/a&gt; at Alpine's excellent &lt;strong&gt;&lt;a href=&quot;https://wiki.alpinelinux.org/wiki/APKBUILD_Reference#install_if&quot;&gt;&lt;code&gt;install_if&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; feature, which allows us to automatically install the config &lt;em&gt;if&lt;/em&gt; both the program and the device package are installed. We &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/499&quot;&gt;refactored&lt;/a&gt; the device packages accordingly.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;weston&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;install_if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$pkgname&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; weston&amp;quot;&lt;/span&gt;
    install -Dm644 &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$srcdir&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;/weston.ini &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$subpkgdir&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;/etc/xdg/weston/weston.ini
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/craftyguy&quot;&gt;@craftyguy&lt;/a&gt;, &lt;a href=&quot;https://github.com/kaniini&quot;&gt;@kaniini&lt;/a&gt;, &lt;a href=&quot;https://github.com/MartijnBraam&quot;&gt;@MartijnBraam&lt;/a&gt;, &lt;a href=&quot;https://github.com/ollieparanoid&quot;&gt;@ollieparanoid&lt;/a&gt;, &lt;a href=&quot;https://github.com/PureTryOut&quot;&gt;@PureTryOut&lt;/a&gt;, &lt;a href=&quot;https://github.com/Wouter92&quot;&gt;@Wouter92&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;comments&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#comments&quot;&gt;Comments&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/postmarketOS/duplicates/7n6x0a/219_days_of_postmarketos/&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=16204775&quot;&gt;Hacker News&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry xml:base="https://postmarketos.org/blog/feed.atom">
    <title type="text">Why supporting the Librem Phone crowdfunding campaign helps postmarketOS (and friends)</title>
    <id>https://postmarketos.org/blog/2017/09/24/librem-5/</id>
    <updated>2017-09-24T00:00:00Z</updated>
    <link href="https://postmarketos.org/blog/2017/09/24/librem-5/" />
    <content type="html">&lt;h2 id=&quot;proprietary-components-make-smartphones-insecure-for-the-masses&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#proprietary-components-make-smartphones-insecure-for-the-masses&quot;&gt;Proprietary components make smartphones insecure for the masses&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Whenever you buy &lt;em&gt;any&lt;/em&gt; smartphone, you get a device full of proprietary components. These are integrated so deeply with each other that they can access everything on your phone, such as the camera, microphone, browser history and chat messages. Since these components are proprietary, they've been designed to make it &lt;strong&gt;impossible for anyone but the vendor to modify&lt;/strong&gt;, and they can only be &lt;strong&gt;understood by others through immense efforts&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Oftentimes, when people succeed in analyzing them, they find &lt;strong&gt;security holes&lt;/strong&gt; and sometimes even &lt;a href=&quot;https://redmine.replicant.us/projects/replicant/wiki/SamsungGalaxyBackdoor&quot;&gt;backdoors&lt;/a&gt;. Since these devices are only supported for short periods of time by manufacturers and vendors, they refuse to close newly discovered security holes when the support period has run out. The relatively small number of people who are aware of this issue are forced to buy new devices every few years. Meanwhile the unsuspecting general public doesn't realize how insecure their devices are, thus &lt;strong&gt;lowering security for everyone&lt;/strong&gt;. What good is it when you have a protected phone, but most other people you meet and communicate with might as well be carrying around spying devices?&lt;/p&gt;
&lt;h2 id=&quot;postmarketos-tries-to-fix-existing-devices&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#postmarketos-tries-to-fix-existing-devices&quot;&gt;postmarketOS tries to fix existing devices&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Our solution is to replace the entire operating systems of these devices with an alternative one, that uses free and open source software wherever feasible. In order to do that, we're bending the security-focused &lt;a href=&quot;https://alpinelinux.org&quot;&gt;Alpine Linux&lt;/a&gt; (you may know it from Docker, but it is &lt;a href=&quot;http://git.net/ml/linux.leaf.devel/2005-08/msg00039.html&quot;&gt;much older&lt;/a&gt;) to work on all kinds of existing mobile devices. In the spirit of real Linux distributions, there is a package manager and &lt;strong&gt;as much freedom for the user as possible&lt;/strong&gt;. We aim for a &lt;strong&gt;&lt;a href=&quot;https://postmarketos.org/blog/2017/05/26/intro/&quot;&gt;10 year life-cycle for smartphones&lt;/a&gt;&lt;/strong&gt; and, although we're in pre-alpha state, we have made &lt;a href=&quot;https://postmarketos.org/blog/2017/09/03/100-days-of-postmarketos/&quot;&gt;quite some progress&lt;/a&gt; and have &lt;a href=&quot;https://wiki.postmarketos.org/&quot;&gt;lots of documentation&lt;/a&gt; available. Ideally we fix all security issues from the outdated vendor OS by using &lt;strong&gt;up-to-date software&lt;/strong&gt; (e.g. the &lt;a href=&quot;https://postmarketos.org/blog/2017/09/03/100-days-of-postmarketos/#mainline-kernel&quot;&gt;Linux kernel&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&quot;librem-5-phone-does-it-right-by-design&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#librem-5-phone-does-it-right-by-design&quot;&gt;Librem 5 phone does it right, by design&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The people from Purism provide another way to reach the same goal: They bend &lt;a href=&quot;https://debian.org&quot;&gt;Debian GNU/Linux&lt;/a&gt; for &lt;strong&gt;one specific phone&lt;/strong&gt;, which they will create from scratch, the &lt;a href=&quot;https://puri.sm/shop/librem-5/&quot;&gt;Librem 5&lt;/a&gt;. It will have as few proprietary components as necessary, and these will be &lt;strong&gt;isolated in hardware&lt;/strong&gt; from the rest of the system. That means, even if someone hacks them through a security hole, those components will be unable to access other components storing or capturing other data (e.g. chat messages.)&lt;/p&gt;
&lt;p&gt;Planned &lt;strong&gt;hardware kill-switches&lt;/strong&gt; for camera, microphone, wifi, bluetooth and cellular modem will allow you to turn on certain components, which are highly likely to be proprietary, only when needed. Imagine flipping the microphone switch before and after each phone call - that way you could be sure that it can not listen to any private conversations you are having from person to person while carrying your phone around.&lt;/p&gt;
&lt;p&gt;It will be possible to &lt;strong&gt;exchange&lt;/strong&gt; the &lt;strong&gt;battery&lt;/strong&gt; and extend the amount of available storage space with a &lt;strong&gt;microSD&lt;/strong&gt; slot, two important characteristics that increase the lifetime of a phone.&lt;/p&gt;
&lt;h2 id=&quot;common-ground&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#common-ground&quot;&gt;Common ground&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Librem 5 is privacy and security focused, so we expect it to have &lt;strong&gt;full disk encryption&lt;/strong&gt;. Full disk encryption safeguards the data on your device by requiring a password on when the device is started before any of the data on it is accessible. And without that password, someone else is not able to find out which data is stored on the device, or which programs are installed. In order to type in this password on a PC you would normally use a physical keyboard, but on a phone you will need an &lt;strong&gt;on-screen touch keyboard&lt;/strong&gt;. We have put some research into this topic already and, as there was no existing Linux program just for that purpose, we created our own program: &lt;a href=&quot;https://github.com/postmarketOS/osk-sdl&quot;&gt;osk-sdl&lt;/a&gt;. That is one example where the Purism could use a component &lt;strong&gt;started by the postmarketOS community&lt;/strong&gt; and make it a shared component we develop and improve with &lt;strong&gt;joined forces&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;User interfaces are another example: Purism will either use &lt;strong&gt;&lt;a href=&quot;https://www.kde.org/announcements/kde-purism-librem5.php&quot;&gt;KDE's plasma-mobile&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href=&quot;https://www.gnome.org/news/2017/09/gnome-foundation-partners-with-purism-to-support-its-efforts-to-build-the-librem-5-smartphone/&quot;&gt;Gnome&lt;/a&gt;&lt;/strong&gt;, while postmarketOS is interested in &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/62&quot;&gt;all kinds of mobile-friendly user interfaces&lt;/a&gt;. We have done &lt;a href=&quot;https://postmarketos.org/blog/2017/09/03/100-days-of-postmarketos/#plasma-mobile-kdes-plasma-desktop-for-phones&quot;&gt;early work&lt;/a&gt; on plasma-mobile already, and Gnome is &lt;a href=&quot;https://pkgs.alpinelinux.org/packages?name=gnome*&amp;amp;branch=edge&amp;amp;repo=&amp;amp;arch=&amp;amp;maintainer=&quot;&gt;directly provided&lt;/a&gt; by our upstream friends. So no matter which one will they decide to run on the Librem 5, we will benefit from them making sure it is ready for daily usage on mobile phones.&lt;/p&gt;
&lt;p&gt;We were happy to learn that the Purism has teamed up with &lt;strong&gt;&lt;a href=&quot;https://matrix.org/blog/2017/08/24/the-librem-5-from-purism-a-matrix-native-smartphone/&quot;&gt;Matrix&lt;/a&gt;&lt;/strong&gt; to provide the &lt;strong&gt;native dialer&lt;/strong&gt; and &lt;strong&gt;messaging program&lt;/strong&gt;. Despite not involving red or blue pills and an illusion of reality like the famous movie, Matrix is a decentralized open source protocol for real-time communication with state-of-the-art end-to-end encryption. It is a big win for privacy and security, and Librem users will be able to use it by default. Traditional, unencrypted telephony and SMS are also available for use when necessary. The best part for us is of course, that we could &lt;strong&gt;package&lt;/strong&gt; the resulting applications &lt;strong&gt;for postmarketOS&lt;/strong&gt;, bringing them to a wide range of old devices!&lt;/p&gt;
&lt;h2 id=&quot;all-or-nothing&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#all-or-nothing&quot;&gt;All or nothing&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There is a pattern here: Once the Librem 5 development takes off, everything that gets built for it (by Purism or by the wider community) and that is not strictly tied to Debian, can be used by postmarketOS and friends.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://puri.sm/shop/librem-5/&quot;&gt;One Librem Phone costs $599&lt;/a&gt;, but it is possible to support the campaign with other amounts of cash (starting from $20). While the price tag for the Librem 5 is high compared to cheap Android phones, keep in mind that it is for a device giving you &lt;strong&gt;freedom, privacy, security&lt;/strong&gt; and, considering how active and time-proven the Debian community is, it will likely get &lt;strong&gt;updates until it physically breaks&lt;/strong&gt;. The estimated delivery date is January 2019.&lt;/p&gt;
&lt;p&gt;No matter which Linux distribution, phone, desktop environment, messenger, init system or libc you prefer: &lt;strong&gt;A successful Librem 5 campaign will rapidly improve the situation for all Linux distributions on phones.&lt;/strong&gt; But it's an all or nothing campaign. If our Purism friends don't reach their funding goal, none of these awesome features will be implemented by them and the Librem 5 will not see the light of day.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://puri.sm/shop/librem-5/&quot;&gt;So let's make sure that it succeeds.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;comments&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#comments&quot;&gt;Comments&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=15324169&quot;&gt;Hacker News&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/postmarketOS/duplicates/724b3t/why_supporting_the_librem_phone_crowdfunding/&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/postmarketOS/status/911900003492352000&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry xml:base="https://postmarketos.org/blog/feed.atom">
    <title type="text">100 days of postmarketOS</title>
    <id>https://postmarketos.org/blog/2017/09/03/100-days-of-postmarketos/</id>
    <updated>2017-09-03T00:00:00Z</updated>
    <link href="https://postmarketos.org/blog/2017/09/03/100-days-of-postmarketos/" />
    <content type="html">&lt;h2 id=&quot;sustainable-approach-for-linux-on-phones&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#sustainable-approach-for-linux-on-phones&quot;&gt;Sustainable Approach For Linux on Phones&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We are building an alternative to Android and other mobile operating systems by &lt;em&gt;not&lt;/em&gt; forking but &lt;strong&gt;bending the &lt;a href=&quot;http://git.net/ml/linux.leaf.devel/2005-08/msg00039.html&quot;&gt;time-proven&lt;/a&gt; &lt;a href=&quot;https://alpinelinux.org&quot;&gt;Alpine Linux&lt;/a&gt; distribution&lt;/strong&gt; to fit our purpose. Instead of using Android's build process, we build small software packages that can be installed with Alpine's package manager. To minimize the amount of effort for maintenance, we want every device to require &lt;strong&gt;only one device-specific package and share everything else&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;At this point our OS is only suitable for fellow hackers who enjoy using the command-line and want to improve postmarketOS. &lt;strong&gt;Telephony or other typical smartphone tasks are not working yet.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;why-we-evolve-in-many-directions&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#why-we-evolve-in-many-directions&quot;&gt;Why We Evolve in Many Directions&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Why don't we focus on one &quot;flagship&quot; device and stop making blog posts until it can be used as daily driver?&lt;/p&gt;
&lt;p&gt;Our philosophy is that community-based FLOSS projects need to &lt;strong&gt;become known during the development phase to fellow developers.&lt;/strong&gt; Our way of doing that is through periodically posting reports summarizing our &lt;em&gt;real progress&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The postmarketOS community is a collective group of hackers who contribute to this project in their free time. We won't tell someone who wants to, for example, extend postmarketOS to run Doom on their smartwatch that their idea has no benefit to the project's vision. Such activities demonstrate the flexibility of postmarketOS and oftentimes leads to improvements to the project's codebase as new requirements are implemented to cover previously unforeseen use cases. In addition, these &lt;em&gt;fun&lt;/em&gt; activities also increase our collective knowledge about the software and hardware we work with. But most importantly we don't want to, or plan to, take the fun away. &lt;strong&gt;Because without being fun and rewarding, a free time project becomes a dead project.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It's not all about running Doom though, there are also individuals in the project who have the most fun by &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Milestones&quot;&gt;actually bringing the project towards this daily-driver vision&lt;/a&gt;. Read on to learn about both the &lt;strong&gt;incredibly beneficial efforts&lt;/strong&gt; as well as the &lt;strong&gt;fun exercises&lt;/strong&gt; we have done since &lt;a href=&quot;https://ollieparanoid.github.io/post/50-days-of-postmarketOS/&quot;&gt;the last post&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id=&quot;integrated-qemu-support&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#integrated-qemu-support&quot;&gt;Integrated QEMU Support&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The idea of providing a device specific package for QEMU was introduced back in July &lt;em&gt;&quot;so it will be easier to try the project and/or develop userspace&quot;&lt;/em&gt;. Although the initial PR &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/56&quot;&gt;#56&lt;/a&gt; didn't make it, the idea got picked up again and today we can provide you with an implementation of exactly that vision. &lt;strong&gt;All you need to &lt;em&gt;dive right into running postmarketOS on QEMU&lt;/em&gt; is to install Python (3.4+), git, QEMU, and run the following commands.&lt;/strong&gt; As expected, &lt;code&gt;pmbootstrap&lt;/code&gt; does everything in chroots in the &lt;code&gt;install&lt;/code&gt; step, so your host operating system does not get touched.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git clone https://gitlab.com/postmarketOS/pmbootstrap.git
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; pmbootstrap
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ./pmbootstrap.py init &lt;span class=&quot;c1&quot;&gt;# choose &amp;quot;qemu-amd64&amp;quot;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ./pmbootstrap.py install --no-fde
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ./pmbootstrap.py qemu
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/mmaret&quot;&gt;@mmaret&lt;/a&gt;, &lt;a href=&quot;https://github.com/MartijnBraam&quot;&gt;@MartijnBraam&lt;/a&gt;, &lt;a href=&quot;https://github.com/PabloCastellano&quot;&gt;@PabloCastellano&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;early-work-on-new-user-interfaces&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#early-work-on-new-user-interfaces&quot;&gt;Early Work on New User Interfaces&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Since postmarketOS was released, we have been using Wayland's reference compositor Weston as a UI. However, as stated in &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/62&quot;&gt;#62&lt;/a&gt;, it &lt;em&gt;&quot;is a cool demo, but far from a usable day-to-day shell people can work with. &lt;strong&gt;We need to provide a sane UI.&lt;/strong&gt;&quot;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;plasma-mobile-kdes-plasma-desktop-for-phones&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#plasma-mobile-kdes-plasma-desktop-for-phones&quot;&gt;plasma-mobile (KDE's plasma desktop for phones)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/video/2017-09-03/plasma-mobile-qemu.webm&quot;&gt;&lt;img alt=&quot;QEMU booting up to plasma-mobile&quot; class=&quot;border&quot; src=&quot;/static/img/2017-09-03/plasma-mobile-qemu-thumb.gif&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
Alpine Linux does not have any KDE programs or libraries packaged yet, so &lt;a href=&quot;https://github.com/PureTryOut&quot;&gt;@PureTryOut&lt;/a&gt; went through the colossal task of packaging, looking for patches, compiling and debugging &lt;strong&gt;more than 80 pieces of plasma-mobile related software&lt;/strong&gt;. This is the very minimum to get the mobile version of KDE's Plasma desktop running.&lt;/p&gt;
&lt;p&gt;Alpine provided quite a few challenges along the way, such as the usage of the more standards compliant musl libc instead of the commonly used glibc.
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Luckily &lt;a href=&quot;https://phabricator.kde.org/p/mpyne&quot;&gt;@mpyne&lt;/a&gt; &lt;a href=&quot;https://phabricator.kde.org/D6596&quot;&gt;already provided patches&lt;/a&gt; in KDE's bugtracker that we were able to use. &lt;a href=&quot;https://github.com/bhush9&quot;&gt;@bshah&lt;/a&gt; not only helped us with the port, but also &lt;a href=&quot;https://www.reddit.com/r/postmarketOS/comments/6p1avq/postmarketos_at_the_kde_akademy_2017_presented_by/&quot;&gt;mentioned postmarketOS&lt;/a&gt; in his plasma-mobile talk at KDE's Akademy 2017. This is definitely a huge step in the direction towards making plasma-mobile work on postmarketOS! We're excited to see where this is heading, and would &lt;strong&gt;greatly appreciate any help from interested developers&lt;/strong&gt;. Jump right in with QEMU and the &lt;a href=&quot;https://github.com/PureTryOut/pmos-plasma-mobile&quot;&gt;unofficial binary packages for KDE/Plasma&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/bhush9&quot;&gt;@bshah&lt;/a&gt;, &lt;a href=&quot;https://phabricator.kde.org/p/mpyne&quot;&gt;@mpyne&lt;/a&gt;, &lt;a href=&quot;https://github.com/PureTryOut&quot;&gt;@PureTryOut&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;hildon&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#hildon&quot;&gt;Hildon&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2017-09-03/hildon.png&quot;&gt;&lt;img alt=&quot;Hildon in postmarketOS&quot; src=&quot;/static/img/2017-09-03/hildon-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
The popular Nokia N900 originally shipped with a desktop called &lt;em&gt;Hildon&lt;/em&gt;, which ran on its Debian-based &lt;a href=&quot;https://maemo.org&quot;&gt;Maemo&lt;/a&gt; operating system. &lt;a href=&quot;https://github.com/NotKit&quot;&gt;@NotKit&lt;/a&gt; started a port currently containing the minimum packages required to get working: a modified, mobile friendly, GTK+2 and 12 other packages. A modernized GTK+3 version of Hildon is being worked on at &lt;a href=&quot;https://talk.maemo.org/showthread.php?t=96800&quot;&gt;talk.maemo.org&lt;/a&gt;, which we could package in the future.&lt;/p&gt;
&lt;p&gt;While Hildon is based on X11 instead of Wayland, it is still a lightweight phone interface suitable for older devices.
&lt;/div&gt;&lt;/div&gt;
&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/NotKit&quot;&gt;@NotKit&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;of-course-it-runs-doom&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#of-course-it-runs-doom&quot;&gt;&quot;Of Course it Runs Doom!&quot;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2017-09-03/doom-xperia-z2.png&quot;&gt;&lt;img alt=&quot;Doom on pmOS with freedreno&quot; src=&quot;/static/img/2017-09-03/doom-xperia-z2-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
Speaking of classic interfaces, &lt;a href=&quot;https://github.com/Opendata26&quot;&gt;@Opendata26&lt;/a&gt; made an obligatory Doom port. In the photo is his &lt;strong&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Sony_Xperia_Z2_Tablet_(sony-castor-windy)&quot;&gt;Xperia Z2 tablet&lt;/a&gt;&lt;/strong&gt; with a 4.3 kernel and the open source userspace driver &lt;strong&gt;&lt;a href=&quot;https://github.com/freedreno/freedreno/wiki&quot;&gt;freedreno&lt;/a&gt;&lt;/strong&gt;. In addition to running Doom, he also enabled the driver upstream in Alpine's &lt;code&gt;mesa&lt;/code&gt; package so that all Alpine users can benefit from it!
&lt;/div&gt;&lt;/div&gt;
Check out his &lt;a href=&quot;https://www.reddit.com/6temny/&quot;&gt;/r/postmarketOS post&lt;/a&gt; for more photos of other games running. Even though freedreno provides a FOSS implementation of the userspace portion of the driver, it still requires a proprietary firmware file for 3D acceleration. This test was made with X11, as it currently does not work with a Wayland compositor. Further debug will be required to determine why this is the case!&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2017-09-03/doom-lg-lenok.png&quot;&gt;&lt;img alt=&quot;Doom on a smartwatch with pmOS&quot; src=&quot;/static/img/2017-09-03/doom-lg-lenok-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
Next up is &lt;a href=&quot;https://github.com/JamesHealdUK&quot;&gt;@Bloo&lt;/a&gt;, who decided to port postmarketOS to his &lt;strong&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/LG_G_Watch_R_(lg-lenok)&quot;&gt;LG G Watch R&lt;/a&gt;&lt;/strong&gt;, giving us the &lt;strong&gt;first smartwatch port&lt;/strong&gt;! In order to take out the watch and shout &lt;em&gt;&quot;It's time to play Doom!&quot;&lt;/em&gt; whenever asked for the time, he decided to compile and run it on his device too. In the photo on the right, Doom is running in its &lt;strong&gt;native resolution&lt;/strong&gt; of 320x240 (compare to the watch at 320x320) in Weston through XWayland. For both the Xperia Z2 and LG G Watch R, &lt;a href=&quot;https://www.chocolate-doom.org/&quot;&gt;Chocolate Doom&lt;/a&gt; was used and is being packaged for postmarketOS now.
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/JamesHealdUK&quot;&gt;@Bloo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Opendata26&quot;&gt;@Opendata26&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;other-new-devices&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#other-new-devices&quot;&gt;Other New Devices&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We have &lt;strong&gt;nine&lt;/strong&gt; new devices in the last 50 days! In addition to the two mentioned above, we also have:&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2017-09-03/nexus7.png&quot;&gt;&lt;img alt=&quot;Nexus 7 running Weston&quot; class=&quot;fr ml3 mb3&quot; src=&quot;/static/img/2017-09-03/nexus7-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Google_Nexus_7_2012_(asus-grouper)&quot;&gt;Google Nexus 7 (2012) &lt;code&gt;(asus-grouper)&lt;/code&gt;&lt;/a&gt; &lt;em&gt;(photo)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/HTC_Desire_HD_(htc-ace)&quot;&gt;HTC Desire HD &lt;code&gt;(htc-ace)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/HTC_Desire_(htc-bravo)&quot;&gt;HTC Desire &lt;code&gt;(htc-bravo)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Mozilla_Flame_(t2m-flame)&quot;&gt;Mozilla Flame &lt;code&gt;(t2m-flame)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Galaxy_Note_II_(samsung-n7100)&quot;&gt;Galaxy Note II &lt;code&gt;(samsung-n7100)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Sony_Xperia_Z1_Compact_(sony-amami)&quot;&gt;Sony Xperia Z1 Compact &lt;code&gt;(sony-amami)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.postmarketos.org/wiki/Sony_Xperia_Z_(sony-yuga)&quot;&gt;Sony Xperia Z &lt;code&gt;(sony-yuga)&lt;/code&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/antonok-edm&quot;&gt;@antonok&lt;/a&gt;, &lt;a href=&quot;https://github.com/ata2001&quot;&gt;@ata2001&lt;/a&gt;, &lt;a href=&quot;https://github.com/JamesHealdUK&quot;&gt;@Bloo&lt;/a&gt;, &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt;, &lt;a href=&quot;https://github.com/kskarthik&quot;&gt;@kskarthik&lt;/a&gt;, &lt;a href=&quot;https://github.com/Victor9&quot;&gt;@Victor9&lt;/a&gt;, &lt;a href=&quot;https://github.com/wouter92&quot;&gt;@wfranken&lt;/a&gt;, &lt;a href=&quot;https://github.com/yuvadm&quot;&gt;@yuvadm&lt;/a&gt; and everyone who helped them in the chat&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;initramfs-is-full-of-new-features&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#initramfs-is-full-of-new-features&quot;&gt;Initramfs is Full of New Features&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;initramfs&lt;/code&gt; is a small filesystem with an &lt;code&gt;init.sh&lt;/code&gt; file that prepares the environment before it passes control to the init system running in the real root partition. For postmarketOS we use it to &lt;strong&gt;find and optionally unlock the root&lt;/strong&gt; partition.&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2017-09-03/osk-wave.gif&quot;&gt;&lt;img alt=&quot;on screen keyboard&quot; class=&quot;border&quot; src=&quot;/static/img/2017-09-03/osk-wave-thumb.gif&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
&lt;a href=&quot;https://github.com/craftyguy&quot;&gt;@craftyguy&lt;/a&gt; and &lt;a href=&quot;https://github.com/MartijnBraam&quot;&gt;@MartijnBraam&lt;/a&gt; have started to write a new &lt;strong&gt;on-screen keyboard&lt;/strong&gt; named &lt;a href=&quot;https://github.com/postmarketOS/osk-sdl&quot;&gt;&lt;code&gt;osk-sdl&lt;/code&gt;&lt;/a&gt; from scratch because we couldn't find an existing one that did not depend on heavy GUI libraries. &lt;code&gt;osk-sdl&lt;/code&gt; will allow us to &lt;strong&gt;unlock&lt;/strong&gt; the root filesystem directly with the device's touch screen or physical keyboard (if applicable). It is currently in the process of being integrated into postmarketOS, after which it will fully replace the current method of unlocking via telnet. If unlocking via telnet is a requirement for you, please reach out to us and let us know!
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;To work around the tight size limitations on some devices which do not support having a large &lt;code&gt;boot.img&lt;/code&gt; file, &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt; implemented the &lt;strong&gt;&lt;code&gt;initramfs-extras&lt;/code&gt;&lt;/strong&gt; trick: a second initramfs file stores &lt;strong&gt;all the big files&lt;/strong&gt; and is placed in the unencrypted &lt;code&gt;boot&lt;/code&gt; partition. The real initramfs then detects this file by its label and extracts everything from &lt;code&gt;initramfs-extras&lt;/code&gt;. At this point the &lt;code&gt;init&lt;/code&gt; script works like before and has all files it needs!&lt;/p&gt;
&lt;p&gt;Speaking of small size: the system image generated in the installation step doesn't have a fixed size anymore, it now adjusts dynamically! After flashing and booting, the initramfs will check whether the flashed image takes up all available space of the system partition and, if it does not, &lt;strong&gt;automatically resizes the partition to use all available space&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2017-09-03/splash.png&quot;&gt;&lt;img alt=&quot;Splash screen rendered for the Samsung Galaxy SII&quot; class=&quot;border&quot; src=&quot;/static/img/2017-09-03/splash-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
Check out that cool new &lt;strong&gt;splash screen&lt;/strong&gt; (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/206&quot;&gt;#206&lt;/a&gt;)! It gets built dynamically for the device's screen size whenever we build the initramfs. So it always fits perfectly! And in case you don't like it, it comes with a customizable &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/blob/314c17e03cf8cddfd0f385d9db2f23f76f9a0418/aports/main/postmarketos-splash/config.ini&quot;&gt;config&lt;/a&gt;!
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Last but not least we did a lot of refactoring, such as placing the &lt;code&gt;deviceinfo&lt;/code&gt; file inside the initramfs for easy access to device-specific settings and adding support for a configfs-based USB network setup to help out some devices that need it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/craftyguy&quot;&gt;@craftyguy&lt;/a&gt;, &lt;a href=&quot;https://github.com/Defcat&quot;&gt;@Defcat&lt;/a&gt;, &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt;, &lt;a href=&quot;https://github.com/ollieparanoid&quot;&gt;@ollieparanoid&lt;/a&gt;, &lt;a href=&quot;https://github.com/PabloCastellano&quot;&gt;@PabloCastellano&lt;/a&gt;, &lt;a href=&quot;https://github.com/MartijnBraam&quot;&gt;@MartijnBraam&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;interoperability&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#interoperability&quot;&gt;Interoperability&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2017-09-03/twrp.png&quot;&gt;&lt;img alt=&quot;Recovery zip installation in TWRP&quot; class=&quot;border&quot; src=&quot;/static/img/2017-09-03/twrp-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
With all the recent device porting we have learned that there are &lt;em&gt;many&lt;/em&gt; different flashing methods required for different devices. In some cases it isn't even possible to directly write to the system partition on a device but it is possible to flash a &lt;strong&gt;recovery zip&lt;/strong&gt; through a recovery operating system, such as the popular &lt;a href=&quot;http://twrp.me/&quot;&gt;TWRP&lt;/a&gt;. &lt;a href=&quot;https://github.com/ata2001&quot;&gt;@ata2001&lt;/a&gt; made it possible to create such an image with &lt;code&gt;pmbootstrap install --android-recovery-zip&lt;/code&gt;. This allows flashing a device by &lt;em&gt;sideloading&lt;/em&gt; this image while TWRP is running with &lt;code&gt;pmbootstrap flasher --method=adb sideload&lt;/code&gt;!
&lt;/div&gt;&lt;/div&gt;
Some older Samsung phones are not &lt;code&gt;fastboot&lt;/code&gt; compatible, but their bootloader implements a so-called &lt;code&gt;odin&lt;/code&gt;-mode. Samsung expects people to install their proprietary, Windows-only &lt;em&gt;Odin&lt;/em&gt; program to be able to flash images in this mode. The protocol has been reverse engineered for some devices and can be used with the open source &lt;a href=&quot;http://glassechidna.com.au/heimdall/&quot;&gt;heimdall&lt;/a&gt; program, which has been wrapped with our &lt;code&gt;pmbootstrap&lt;/code&gt;. But for some older phones the necessary reverse engineering work has not been done and you still have to run the proprietary program to get anything working at all. &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt; has implemented an &lt;strong&gt;Odin-compatible export&lt;/strong&gt; option to help out folks in this situation: &lt;code&gt;pmbootstrap flasher export --odin&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/ata2001&quot;&gt;@ata2001&lt;/a&gt;, &lt;a href=&quot;https://github.com/drebrez&quot;&gt;@drebrez&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;mainline-kernel&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#mainline-kernel&quot;&gt;Mainline Kernel&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;One of our previously stated goals is using the mainline Linux kernel on &lt;strong&gt;as many mobile devices as possible&lt;/strong&gt;. This is not as easy as it might sound, since many Linux-based smartphones (Android) require binary drivers which depend on very specific kernel versions. It's a tremendous task to rewrite these drivers to work with the current kernel APIs. &lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-side&quot;&gt;
&lt;a href=&quot;/static/img/2017-09-03/n900-mainline.png&quot;&gt;&lt;img alt=&quot;N900 running mainline kernel&quot; src=&quot;/static/img/2017-09-03/n900-mainline-thumb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;grid-text&quot;&gt;
Nevertheless, some people have been doing that since long before postmarketOS existed. In the case of the &lt;strong&gt;Nokia N900&lt;/strong&gt; this has been going on for some number of years and almost all components are now supported in the mainline kernel. This has allowed us to &lt;strong&gt;use the mainline kernel as the default&lt;/strong&gt; kernel for the N900, jumping from Maemo's &lt;code&gt;2.6.x&lt;/code&gt; to mainline &lt;code&gt;4.12&lt;/code&gt;!
&lt;/div&gt;&lt;/div&gt;
Most desktop Linux distributions not only provide the kernel from the same source code but also use &lt;strong&gt;one binary kernel package for multiple devices&lt;/strong&gt; for systems of the same CPU architecture. Since this makes maintenance easier, we follow that approach with our &lt;code&gt;linux-postmarketos&lt;/code&gt; package. This package configures the kernel to support multiple devices at once, currently the N900 and QEMU, by supporting &lt;strong&gt;kernel modules&lt;/strong&gt; and &lt;strong&gt;multiple device trees&lt;/strong&gt;. On a side note, it is currently not possible for us to use Alpine's kernels because they do not have support for many components found in smartphones and we wouldn't be as flexible as we are now with temporarily applying patches.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/craftyguy&quot;&gt;@craftyguy&lt;/a&gt;, &lt;a href=&quot;https://github.com/MartijnBraam&quot;&gt;@MartijnBraam&lt;/a&gt; (&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/228&quot;&gt;#228&lt;/a&gt;, &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/pull/159&quot;&gt;#159&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;new-infrastructure&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#new-infrastructure&quot;&gt;New Infrastructure&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We now have several different key pieces of infrastructure in place to support ongoing project development! The first and most obvious if you are a returning reader: we have a brand new &lt;strong&gt;homepage&lt;/strong&gt; that hosts both our main landing page, this blog, and has links to all of our online resources. You might have also seen our new &lt;strong&gt;logo&lt;/strong&gt; which - besides looking great - is &lt;a href=&quot;https://github.com/postmarketOS/postmarketos.org/blob/2e4be89ee8ec656620203fa825e088421afcf092/logo/__init__.py&quot;&gt;rendered programatically&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Our GitHub-based &lt;strong&gt;wiki&lt;/strong&gt; has served us well up until now, but we have outgrown it. We've since &lt;a href=&quot;https://gist.github.com/ollieparanoid/6ac9122e31258a7ab8498a362b249fa8&quot;&gt;migrated&lt;/a&gt; to a &lt;a href=&quot;https://wiki.postmarketos.org&quot;&gt;proper MediaWiki server&lt;/a&gt; with complete &lt;a href=&quot;https://github.com/postmarketOS/wiki&quot;&gt;public backups&lt;/a&gt;. Did you know that &lt;code&gt;git&lt;/code&gt; has &lt;a href=&quot;https://github.com/Git-Mediawiki/Git-Mediawiki/wiki&quot;&gt;MediaWiki support&lt;/a&gt; nowadays?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Travis CI&lt;/strong&gt; now verifies the checksums of downloads in our package recipes and also runs &lt;code&gt;shellcheck&lt;/code&gt; over more scripts across the source tree. With these changes, in combination with numerous bug fixes and requiring that nearly all changes to the &lt;code&gt;master&lt;/code&gt; branch are presented as PRs for review, &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap&quot;&gt;&lt;code&gt;pmbootstrap&lt;/code&gt;&lt;/a&gt; runs pretty stable now.&lt;/p&gt;
&lt;p&gt;With over 100 people in the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Matrix_and_IRC&quot;&gt;Matrix/IRC&lt;/a&gt; channel and &lt;em&gt;lots&lt;/em&gt; of messages coming in every day, we decided to create &lt;strong&gt;&lt;code&gt;##postmarketOS-offtopic&lt;/code&gt;&lt;/strong&gt; to keep the backlog in &lt;code&gt;#postmarketOS&lt;/code&gt; a bit shorter.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to: &lt;a href=&quot;https://github.com/ata2001&quot;&gt;@ata2001&lt;/a&gt;, &lt;a href=&quot;https://github.com/CmdrWgls&quot;&gt;@CmdrWgls&lt;/a&gt;, &lt;a href=&quot;https://github.com/MartijnBraam&quot;&gt;@MartijnBraam&lt;/a&gt;, &lt;a href=&quot;https://github.com/ollieparanoid&quot;&gt;@ollieparanoid&lt;/a&gt;, &lt;a href=&quot;https://github.com/yuvadm&quot;&gt;@yuvadm&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;raw-numbers&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#raw-numbers&quot;&gt;Raw numbers&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;100 people in the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Matrix_and_IRC&quot;&gt;channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;605 &lt;a href=&quot;https://www.reddit.com/r/postmarketOS/&quot;&gt;/r/postmarketOS&lt;/a&gt; readers&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap&quot;&gt;pmbootstrap&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;555 stargazers&lt;/li&gt;
&lt;li&gt;223 closed PRs&lt;/li&gt;
&lt;li&gt;185 closed issues&lt;/li&gt;
&lt;li&gt;75 open issues&lt;/li&gt;
&lt;li&gt;55 watchers&lt;/li&gt;
&lt;li&gt;48 forks&lt;/li&gt;
&lt;li&gt;27 contributors (&lt;code&gt;git shortlog --summary --numbered | wc -l&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;closing-words&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#closing-words&quot;&gt;Closing words&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;What you see here is only the tip of the iceberg. So much work has gone into fixing bugs, and little improvements, that it would be ridiculous to go through the effort and list them all. The community has grown so fast in such a short time and we have &lt;strong&gt;people with all kinds of skills&lt;/strong&gt; on board, ranging from Linux experts to kernel hackers to people who &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Mediatek&quot;&gt;reverse engineer bootloaders&lt;/a&gt; (hi &lt;a href=&quot;https://github.com/McBitter&quot;&gt;@McBitter&lt;/a&gt;!). We collaborate with people from other projects as well, such as &lt;a href=&quot;https://github.com/pavelmachek&quot;&gt;@pavelmachek&lt;/a&gt;, who is close to using his N900 as a daily driver with his own distribution, recently &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/438&quot;&gt;just reached out&lt;/a&gt; to us.&lt;/p&gt;
&lt;p&gt;So if you read through the whole post, you are probably interested in what we do. Consider contributing to the project, the &lt;strong&gt;entry barrier is really low&lt;/strong&gt;. &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/&quot;&gt;&lt;code&gt;pmbootstrap&lt;/code&gt;&lt;/a&gt; automates everything for you and we are more than happy to help you through any issues you encounter in the &lt;a href=&quot;https://wiki.postmarketos.org/wiki/Matrix_and_IRC&quot;&gt;chat&lt;/a&gt;. There are also a lot of &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues&quot;&gt;opportunities to help with development&lt;/a&gt;, so there's plenty to do. And plenty of fun to have. &lt;strong&gt;Join us and tell your friends!&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;comments&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#comments&quot;&gt;Comments&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=15160137&quot;&gt;HackerNews&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/postmarketOS/duplicates/6xrvef/100_days_of_postmarketos/&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mobile.twitter.com/postmarketOS/status/904249086366404609&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry xml:base="https://postmarketos.org/blog/feed.atom">
    <title type="text">Aiming for a 10 year life-cycle for smartphones</title>
    <id>https://postmarketos.org/blog/2017/05/26/intro/</id>
    <updated>2017-05-26T00:00:00Z</updated>
    <link href="https://postmarketos.org/blog/2017/05/26/intro/" />
    <content type="html">&lt;p&gt;&lt;a href=&quot;/static/img/2017-05-26/i9100-filled.jpg&quot;&gt;&lt;img alt=&quot;Samsung Galaxy SII (i9100) running postmarketOS&quot; class=&quot;border&quot; src=&quot;/static/img/2017-05-26/i9100-filled-thumb.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Introduction post to &lt;a href=&quot;https://github.com/postmarketOS/&quot;&gt;postmarketOS&lt;/a&gt;, a touch-optimized, pre-configured &lt;a href=&quot;https://alpinelinux.org/&quot;&gt;Alpine Linux&lt;/a&gt; with own packages, that can be installed on smartphones. (Not usable for most people yet!)&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;minimalistic-linux-distributions-run-fine-on-ten-year-old-pcs&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#minimalistic-linux-distributions-run-fine-on-ten-year-old-pcs&quot;&gt;Minimalistic Linux distributions run fine on ten year old PCs.&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It is 2017. Pick an average PC from 2007 and install a minimal Linux based operating system. You will be able to do basic computing tasks (eg. surfing the web, reading E-Mails, listening to music, chatting) just like on an &lt;em&gt;expensive&lt;/em&gt; modern PC. You will even get security updates, so your old computer is protected, just like as a new one.&lt;/p&gt;
&lt;h2 id=&quot;why-are-androidlinux-phones-different&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#why-are-androidlinux-phones-different&quot;&gt;Why are Android/Linux phones different?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Androids architecture is based on &lt;strong&gt;forking&lt;/strong&gt; (one might as well say &lt;em&gt;copy-pasting&lt;/em&gt;) &lt;strong&gt;the entire code-base for each and every device &lt;em&gt;and&lt;/em&gt; Android version.&lt;/strong&gt; And then working on that independent, basically instantly incompatible version. Especially adding device-specific drivers plays an important role.&lt;/p&gt;
&lt;p&gt;This workflow makes it next to impossible to patch all Android devices with security updates in time or at all (&lt;em&gt;Stagefright&lt;/em&gt; vulnerabilities for example rendered &lt;a href=&quot;https://threatpost.com/stagefright-2-0-vulnerabilities-affect-1-billion-android-devices/114863/&quot;&gt;one billion devices&lt;/a&gt; vulnerable). And even if the vendor provides updates, it will only be for a limited time and then you must buy a new device to get security updates or the latest Android version. How convenient!&lt;/p&gt;
&lt;p&gt;Alright, so there is the &lt;a href=&quot;https://lineageos.org/&quot;&gt;LineageOS&lt;/a&gt; community, which provides weekly updates for an impressive number of smartphones. They provide a practical solution today, and we are very grateful for that. However, such Android based projects will always run behind Google and the phone industry, fixing only symptoms but never the root-cause.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This is just the tip of the iceberg. Android has way more problems, read Cascardo's &lt;a href=&quot;https://cascardo.eti.br/blog/GNU_on_Smartphones_part_II/&quot;&gt;GNU on Smartphones (part II)&lt;/a&gt; for more nightmares.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;we-can-fix-this-as-a-community&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#we-can-fix-this-as-a-community&quot;&gt;We can fix this as a community.&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here is the solution: Bend an existing Linux distribution to run on smartphones. Apply all necessary changes as small patches and upstream them, where it makes sense.&lt;/p&gt;
&lt;p&gt;Of course we are not the only ones, that came to this conclusion - especially in the last few weeks with the &lt;a href=&quot;https://halium.org/&quot;&gt;Halium&lt;/a&gt; project rising &lt;em&gt;(greetings!)&lt;/em&gt;. We are all-in for working together — sharing udev rules, merging Android kernels together, whatever makes sense!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ollieparanoid.github.io/img/2017-05-26/i9100/telnet.jpg&quot;&gt;&lt;img alt=&quot;Unlocking encrypted rootfs via telnet&quot; class=&quot;border&quot; src=&quot;https://ollieparanoid.github.io/img/2017-05-26/i9100/telnet-thumb.jpg&quot; title=&quot;Unlocking encrypted rootfs via telnet&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;postmarketos-architecture&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#postmarketos-architecture&quot;&gt;postmarketOS architecture&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We're working on an Alpine Linux based distribution called postmarketOS where each phone will have &lt;strong&gt;only one &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/tree/master/aports/device/device-samsung-i9100/&quot;&gt;unique&lt;/a&gt; &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/tree/master/aports/device/device-lg-mako&quot;&gt;package&lt;/a&gt;&lt;/strong&gt; — all other packages are shared among all devices.&lt;/p&gt;
&lt;p&gt;These &lt;code&gt;device-$vendor-$name&lt;/code&gt; packages contain a so-called &lt;code&gt;/etc/deviceinfo&lt;/code&gt; file, which &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/blob/master/aports/device/device-samsung-i9100/deviceinfo&quot;&gt;describes&lt;/a&gt; &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/blob/master/aports/device/device-lg-mako/deviceinfo&quot;&gt;what&lt;/a&gt; makes the device special: SD card availability, which flash software to use and other information. The file format is not stable yet, and once we have common kernels for multiple devices, We'd like to include the required modules and &lt;code&gt;dtb&lt;/code&gt; name.&lt;/p&gt;
&lt;p&gt;And just to make it clear, postmarketOS does not fit the Halium model, as it avoids the Android build system entirely and does &lt;em&gt;not&lt;/em&gt; run any part of the Android userspace next to its more or less typical Linux userspace. &lt;em&gt;(At least not in the regular install, but it could come at some point in the future as optional compatibility layer for Android applications if someone wants to work on it.)&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;pmbootstrap&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#pmbootstrap&quot;&gt;pmbootstrap&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Technical details incoming! If you're not into that, skip this section.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Alpine Linux is &lt;em&gt;really small&lt;/em&gt;. A base installation is only about 6 MB in size and takes not more than a few seconds to extract! Thanks to this characteristic, we can have a bootstrap program that abstracts everything in &lt;a href=&quot;https://en.wikipedia.org/wiki/chroot&quot;&gt;chroots&lt;/a&gt; and therefore basically runs on top of any Linux distribution, which has Python 3 and the &lt;code&gt;openssl&lt;/code&gt; command line program available.&lt;/p&gt;
&lt;p&gt;Consequently, the host system does not get touched when installing the required programs (&lt;a href=&quot;https://en.wikipedia.org/wiki/Android_software_development#Fastboot&quot;&gt;&lt;code&gt;fastboot&lt;/code&gt;&lt;/a&gt; etc.) and your distribution doesn't even need to have them packaged.&lt;/p&gt;
&lt;p&gt;Quick feature rundown:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Chroot setup (with distro-independent &lt;a href=&quot;https://wiki.debian.org/QemuUserEmulation&quot;&gt;QEMU user emulation&lt;/a&gt;):&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x86_64&lt;/code&gt;* (building, flashing, ...)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;armhf&lt;/code&gt;* (building)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;armhf&lt;/code&gt;* (target rootfs)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clean chroot shutdown (&lt;code&gt;umount&lt;/code&gt;) and zapping&lt;/li&gt;
&lt;li&gt;Build software as packages:&lt;ul&gt;
&lt;li&gt;Wraps &lt;code&gt;abuild&lt;/code&gt;, the &lt;a href=&quot;https://github.com/alpinelinux/abuild/blob/master/abuild.in#L3&quot;&gt;&quot;light version of &lt;code&gt;makepkg&lt;/code&gt;&quot;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Alpine Linux' &lt;a href=&quot;https://wiki.alpinelinux.org/wiki/APKBUILD_Reference&quot;&gt;&lt;code&gt;APKBUILD&lt;/code&gt;s&lt;/a&gt; are very similar to Arch Linux' &lt;code&gt;PKGBUILD&lt;/code&gt;s&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross_compiler&quot;&gt;Cross-compile&lt;/a&gt; &lt;strong&gt;all&lt;/strong&gt; &lt;code&gt;armhf&lt;/code&gt;-packages:&lt;ul&gt;
&lt;li&gt;Linux Kernel: build with cross-compiler in &lt;code&gt;x86_64&lt;/code&gt; chroot&lt;/li&gt;
&lt;li&gt;Other: build in &lt;code&gt;armhf&lt;/code&gt; chroot, use cross-compiler with &lt;a href=&quot;https://en.wikipedia.org/wiki/distcc&quot;&gt;&lt;code&gt;distcc&lt;/code&gt;&lt;/a&gt; from &lt;code&gt;x86_64&lt;/code&gt; chroot (&lt;a href=&quot;https://archlinuxarm.org/wiki/Distcc_Cross-Compiling&quot;&gt;alarm-style&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Use Alpine Linux' shipped modern &lt;code&gt;gcc&lt;/code&gt;, no pre-built Android toolchain&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Effective caching out of the box (survives chroot zaps):&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ccache.samba.org/&quot;&gt;&lt;code&gt;ccache&lt;/code&gt;&lt;/a&gt; (also works with &lt;code&gt;distcc&lt;/code&gt;/cross-compiler)&lt;/li&gt;
&lt;li&gt;Alpine Linux package cache&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Installation targets:&lt;ul&gt;
&lt;li&gt;Raw image file (flash as &quot;system&quot; partition)&lt;/li&gt;
&lt;li&gt;SD card&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Flasher abstraction:&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Android_software_development#Fastboot&quot;&gt;&lt;code&gt;fastboot&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://glassechidna.com.au/heimdall/&quot;&gt;&lt;code&gt;heimdall&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;... really easy to add more!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Logging:&lt;ul&gt;
&lt;li&gt;all shell commands executed are logged in an extra file&lt;/li&gt;
&lt;li&gt;readable overview is displayed on the screen&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Security:&lt;ul&gt;
&lt;li&gt;Initial package manager download&lt;ul&gt;
&lt;li&gt;Signature verification with &lt;code&gt;openssl&lt;/code&gt; against keys shipped with pmbootstrap&lt;/li&gt;
&lt;li&gt;Minimum installed version check (for downloaded package and version reported by the extracted binary)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;All executed shell commands get properly escaped with Python's built-in &lt;a href=&quot;https://docs.python.org/3/library/shlex.html&quot;&gt;shlex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Working testcases for the above two points&lt;/li&gt;
&lt;li&gt;Only using root rights where necessary (through sudo)&lt;/li&gt;
&lt;li&gt;No default passwords in the installation: The &lt;code&gt;install&lt;/code&gt; action asks for the &lt;em&gt;user's&lt;/em&gt; and for the &lt;em&gt;root partition&lt;/em&gt; password.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;small&gt;* &lt;code&gt;x86_64&lt;/code&gt;/&lt;code&gt;armhf&lt;/code&gt;: Example architectures for host/target. The code is generic, so it should work with any architectures supported by Alpine Linux.&lt;/small&gt;&lt;/p&gt;
&lt;h2 id=&quot;future-goals-and-where-you-could-help&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#future-goals-and-where-you-could-help&quot;&gt;Future goals and where &lt;em&gt;you&lt;/em&gt; could help&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Rough direction of where we'd like postmarketOS to head to. In case you're a hacker who wants to help, feel free to do so. But please write into the &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues&quot;&gt;tracker&lt;/a&gt; before starting serious work. This way we can make sure, that we do not have redundant work.&lt;/p&gt;
&lt;h3 id=&quot;devices&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#devices&quot;&gt;Devices&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Pick an old Android device, that you don't need anymore and start porting postmarketOS for it. It should be pretty straight forward. One &lt;code&gt;device-*&lt;/code&gt; package, one for the kernel, calibrate the touchscreen, and the demos should more or less work already!&lt;/p&gt;
&lt;p&gt;If you're feeling adventurous, try a non-Android device. &lt;a href=&quot;https://en.wikipedia.org/wiki/OpeniBoot&quot;&gt;How about iPhones&lt;/a&gt;?&lt;/p&gt;
&lt;h3 id=&quot;drivers&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#drivers&quot;&gt;Drivers&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Make the following peripherals work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WiFi&lt;/li&gt;
&lt;li&gt;Audio&lt;/li&gt;
&lt;li&gt;Modem (Phone calls, mobile internet)&lt;/li&gt;
&lt;li&gt;Hardware buttons (Volume keys, home button)&lt;/li&gt;
&lt;li&gt;Camera&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In most cases, the drivers are already provided by the Android/LineageOS kernels, that we currently use and only need to be configured in the userspace (for example with &lt;a href=&quot;https://en.wikipedia.org/wiki/Udev&quot;&gt;udev rules&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The long time goal is using the &lt;a href=&quot;https://lwn.net/Articles/680109/&quot;&gt;mainline kernel&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;phone-interface&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#phone-interface&quot;&gt;Phone interface&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;postmarketOS is developed in the spirit of regular Linux distributions, so there's no problem in having multiple phone interfaces (just like KDE/Gnome/XFCE/...) and let the user choose.&lt;/p&gt;
&lt;p&gt;See the current status in &lt;a href=&quot;https://github.com/postmarketOS/pmbootstrap/issues/62&quot;&gt;#62&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;security&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#security&quot;&gt;Security&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Great care has been taken to make pmbootstrap safe, as it will run on productive systems of postmarketOS developers. This is not the case for postmarketOS in its current proof-of-concept state (Weston runs as root, ...) so we must work on that before it can be used in real life. Even better would be &lt;a href=&quot;https://en.wikipedia.org/wiki/Privilege_separation&quot;&gt;privilege separation&lt;/a&gt; throughout the entire OS.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post was originally published &lt;a href=&quot;https://ollieparanoid.github.io/post/postmarketOS&quot;&gt;here&lt;/a&gt;. It has been slightly modified to remove outdated information and to reflect the community efforts.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;photos&quot;&gt;&lt;a class=&quot;toclink&quot; href=&quot;#photos&quot;&gt;Photos&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;div class=&quot;grid&quot;&gt;&lt;div class=&quot;grid-bottom&quot;&gt;
&lt;a href=&quot;/static/img/2017-05-26/i9100-demos.jpg&quot;&gt;&lt;img alt=&quot;postmarketOS demos menu&quot; src=&quot;/static/img/2017-05-26/i9100-demos-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2017-05-26/i9100-firefox.jpg&quot;&gt;&lt;img alt=&quot;Firefox running in XWayland&quot; src=&quot;/static/img/2017-05-26/i9100-firefox-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2017-05-26/i9100-htop.jpg&quot;&gt;&lt;img alt=&quot;htop in two weston-terminals&quot; src=&quot;/static/img/2017-05-26/i9100-htop-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2017-05-26/i9100-smoke.jpg&quot;&gt;&lt;img alt=&quot;Weston smoke demo&quot; src=&quot;/static/img/2017-05-26/i9100-smoke-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/static/img/2017-05-26/mako-editor.jpg&quot;&gt;&lt;img alt=&quot;lg-mako: colors are red, but weston-editor works due to the bigger screen size&quot; src=&quot;/static/img/2017-05-26/mako-editor-thumb.jpg&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;</content>
  </entry>
</feed>
